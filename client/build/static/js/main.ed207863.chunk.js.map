{"version":3,"sources":["landing/DetailedPage.js","common/AppMenu.js","landing/HomePage.js","games/MemoryGame.js","games/OddManGame.js","games/TimerGame.js","games/GameMenu.js","QuestionSet.js","OtherPage.js","games/QuizGame.js","App.js","serviceWorker.js","index.js"],"names":["DetailedPage","props","state","showAnswerDetails","subCategory","handleClick","category","document","getElementById","hidden","innerHTML","title","map","eachSubCategory","itemName","join","className","Row","Col","sm","size","offset","ListGroup","displayList","showDetails","showAnswer","index","href","key","value","onClick","event","preventDefault","Container","id","AppMenu","Navbar","color","dark","expand","NavbarBrand","Nav","navbar","NavItem","NavLink","Component","HomePage","questionList","answer","isLoading","componentDidMount","getQuestionList","length","faq","ListGroupItem","data-id","code","tag","bind","question","currentTarget","dataset","setState","getAnswer","fetch","response","json","body","this","React","MemoryGame","questionAnswer","duplicateQuestionAnswer","openedCards","score","previouslyOpenedCard","buttonColor","winner","showWinnerText","initialise","mapping","eachItem","push","split","clues","eachClue","random","nums","ranNums","i","j","Math","floor","splice","displayMatrix","xs","includeButton","Button","disabled","changeBtnText","setTimeout","validate","Alert","OddManGame","hintText","isCorrect","disableAll","OddManGameLogic","hint","validateAnswer","showHint","nextQuestion","TimerGame","useState","rowText","setRowText","useEffect","showMatrix","showTextValues","matrix","0","text","1","2","row","includeRow","console","log","col","bgColor","class","a","target","classList","card","querySelector","addEventListener","toggle","GameMenu","showMemoryGame","showOddManGame","showTimerGame","ButtonGroup","QuestionSet","faqSection","items","handleChange","name","showitemNameTextBoxes","Input","type","placeholder","onChange","addItem","handleSubmit","me","axios","url","method","data","then","error","showMsg","showText","catch","Form","FormGroup","OtherPage","input","inputRequest","selectedGame","slice","submitForm","addOddManForm","indents","md","onBlur","addMemoryForm","columnNo","selectGame","check","Label","QuizGame","setValue","setError","helperText","setHelperText","onSubmit","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","FormHelperText","variant","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ed207863.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListGroup, Row, Col, Container } from \"reactstrap\";\r\nimport \"../App.css\";\r\nconst DetailedPage = (props) => {\r\n  const state = {\r\n    showAnswerDetails: true,\r\n    subCategory: [],\r\n  };\r\n  const showAnswer = () => {\r\n    const answer = props.showAnswer;\r\n    return answer.map((category, index) => (\r\n      <a\r\n        href=\"\"\r\n        key={index}\r\n        value={category.title}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          handleClick(category);\r\n        }}\r\n      >\r\n        {category.title}\r\n      </a>\r\n    ));\r\n  };\r\n  const handleClick = (category) => {\r\n    state.showAnswerDetails = false;\r\n    document.getElementById(\"DetailedAnswer\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").innerHTML =\r\n      \"<h3>\" + category.title + \"</h3>\";\r\n    document.getElementById(\r\n      \"DetailedAnswer\"\r\n    ).innerHTML = category.subCategory\r\n      .map((eachSubCategory) => \"<h5>\" + eachSubCategory.itemName + \"</h5>\")\r\n      .join(\"\");\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <Row>\r\n        <Col sm={{ size: \"auto\", offset: 1 }}>\r\n          <ListGroup>{props.displayList}</ListGroup>\r\n        </Col>\r\n        <div className=\"scrollmenu\">{props.showDetails && showAnswer()}</div>\r\n        <Container>\r\n          <div\r\n            id=\"DetailedAnswerTitle\"\r\n            className=\"detailedTitle\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n\r\n          <div\r\n            id=\"DetailedAnswer\"\r\n            className=\"detailed\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n        </Container>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedPage;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass AppMenu extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">Tatwas Information</NavbarBrand>\r\n\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/games\">Games</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/others\">Other Information</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from \"react\";\r\nimport { ListGroupItem } from \"reactstrap\";\r\nimport DetailedPage from \"./DetailedPage\";\r\nimport \"../App.css\";\r\n\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    questionList: [],\r\n    answer: [],\r\n    isLoading: true,\r\n    showDetails: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.getQuestionList();\r\n  };\r\n\r\n  async getQuestionList() {\r\n    const response = await fetch(\"/api/faqQuestionList\");\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  displayList = (questionList) => {\r\n    if (questionList.length < 1) return null;\r\n\r\n    return questionList.map((faq, index) => (\r\n      <div key={index} className=\"faq_blocks\">\r\n        <ListGroupItem\r\n          key={index}\r\n          data-id={faq.code}\r\n          color=\"success\"\r\n          tag=\"a\"\r\n          href=\"\"\r\n          onClick={this.showDetails.bind(this)}\r\n        >\r\n          {faq.question}\r\n        </ListGroupItem>\r\n      </div>\r\n    ));\r\n  };\r\n  showDetails = (event) => {\r\n    event.preventDefault();\r\n    const code = event.currentTarget.dataset.id;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.getAnswer(code);\r\n  };\r\n  async getAnswer(code) {\r\n    const response = await fetch(\"/api/faqSpecificAnswer?code=\" + code);\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n      showDetails: true,\r\n      answer: body[0] && body[0].category,\r\n    });\r\n\r\n    //this.showAnswer();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, questionList, showDetails, answer } = this.state;\r\n    if (isLoading) {\r\n      return <div> Loading....</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <div>Sameer</div>\r\n        <DetailedPage\r\n          displayList={this.displayList(questionList)}\r\n          showDetails={showDetails}\r\n          showAnswer={answer}\r\n          questionList={questionList}\r\n          showAnswerDetails={false}\r\n        ></DetailedPage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nimport { Button, Row, Col, Alert } from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass MemoryGame extends React.Component {\r\n  state = {\r\n    questionAnswer: [],\r\n    duplicateQuestionAnswer: [],\r\n    openedCards: 0,\r\n    score: 0,\r\n    previouslyOpenedCard: -1,\r\n    buttonColor: [],\r\n    winner: [],\r\n    showWinnerText: false,\r\n  };\r\n  initialise = () => {\r\n    var response = [\r\n      \"Moola Roopa Of Ashwatthama;Moola Roopa Of Shuka;Rudra\",\r\n      \"Moola Roopa Of Bheema;Moola Roopa Of Hanuma;Vaayu\",\r\n      \"Who Killed Meghadoot Asur;Shatrughna's brother;Lakshman\",\r\n      \"Poorvashrama Name Vasudeva;Paajaka;Madhwacharya\",\r\n      \"Son of Satyavati Devi;Veda vibhaaga Kartru;Vedavyaas\",\r\n    ];\r\n    let mapping = [];\r\n\r\n    response.map((eachItem, index) => {\r\n      let question = [];\r\n      let answer = \"\";\r\n      question.push(eachItem.split(\";\")[0]);\r\n      question.push(eachItem.split(\";\")[1]);\r\n      answer = eachItem.split(\";\")[2];\r\n      mapping.push({\r\n        question: question,\r\n        answer: answer,\r\n      });\r\n    });\r\n    return mapping;\r\n  };\r\n  componentDidMount = () => {\r\n    const mapping = this.initialise();\r\n    let questionAnswer = [];\r\n    const duplicateQuestionAnswer = [];\r\n    const color = [];\r\n    mapping.map((clues) =>\r\n      clues.question.map(\r\n        (eachClue) => (\r\n          questionAnswer.push(eachClue + \";\" + clues.answer),\r\n          duplicateQuestionAnswer.push(\"Find Match\"),\r\n          color.push(\"info\")\r\n        )\r\n      )\r\n    );\r\n    questionAnswer = this.random(questionAnswer);\r\n    this.setState({\r\n      questionAnswer: questionAnswer,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      buttonColor: color,\r\n    });\r\n  };\r\n  random = (nums) => {\r\n    var ranNums = [],\r\n      i = nums.length,\r\n      j = 0;\r\n    while (i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      ranNums.push(nums[j]);\r\n      nums.splice(j, 1);\r\n    }\r\n    return ranNums;\r\n  };\r\n  // {this.includeButton(index, question)}\r\n  displayMatrix = () => {\r\n    const { duplicateQuestionAnswer } = this.state;\r\n\r\n    return duplicateQuestionAnswer.map((question, index) => (\r\n      <Col xs=\"6\" key={index}>\r\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\r\n      </Col>\r\n    ));\r\n  };\r\n  includeButton = (index, question) => {\r\n    const { buttonColor } = this.state;\r\n    return (\r\n      <Button\r\n        color={buttonColor[index]}\r\n        key={index}\r\n        disabled={\r\n          buttonColor[index] === \"warning\" || buttonColor[index] === \"success\"\r\n        }\r\n        value={index}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          this.changeBtnText(index);\r\n        }}\r\n      >\r\n        {question}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  changeBtnText = (index) => {\r\n    let {\r\n      buttonColor,\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      score,\r\n    } = this.state;\r\n    buttonColor[index] = \"warning\";\r\n    score++;\r\n    duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n\r\n    setTimeout(() => {\r\n      this.validate(index);\r\n    }, 2000);\r\n    this.setState({\r\n      buttonColor: buttonColor,\r\n      score: score,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n    });\r\n  };\r\n  validate = (index) => {\r\n    let {\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      openedCards,\r\n      previouslyOpenedCard,\r\n      buttonColor,\r\n      winner,\r\n      showWinnerText,\r\n    } = this.state;\r\n\r\n    if (openedCards === 1) {\r\n      openedCards = 0;\r\n      if (\r\n        questionAnswer[index].split(\";\")[1] ===\r\n        questionAnswer[previouslyOpenedCard].split(\";\")[1]\r\n      ) {\r\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"success\";\r\n        winner.push(index);\r\n        winner.push(previouslyOpenedCard);\r\n        if (winner.length === questionAnswer.length) {\r\n          showWinnerText = true;\r\n        }\r\n        duplicateQuestionAnswer[index] = questionAnswer[index];\r\n        duplicateQuestionAnswer[previouslyOpenedCard] =\r\n          questionAnswer[previouslyOpenedCard];\r\n      } else {\r\n        duplicateQuestionAnswer[index] = duplicateQuestionAnswer[\r\n          previouslyOpenedCard\r\n        ] = \"Find Match\";\r\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"info\";\r\n      }\r\n    } else {\r\n      openedCards++;\r\n      duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n    }\r\n\r\n    this.setState({\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      previouslyOpenedCard: index,\r\n      openedCards: openedCards,\r\n      showWinnerText: showWinnerText,\r\n      winner: winner,\r\n    });\r\n  };\r\n  render() {\r\n    const { score, showWinnerText } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <h3 className=\"header\"> Memory Game</h3>\r\n        <div className=\"arrangeButtons\">\r\n          <Row>Score: (No. of clicks): {score}</Row>\r\n          <Row>{this.displayMatrix()}</Row>\r\n          {showWinnerText && (\r\n            <Row>\r\n              <Alert color=\"danger\">Congratulations ---- Winner</Alert>\r\n            </Row>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemoryGame;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nimport { Button, Row, Col, Alert } from \"reactstrap\";\r\n\r\nclass OddManGame extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    questionAnswer: [],\r\n    hintText: \"Hint\",\r\n    isCorrect: false,\r\n    disableAll: false,\r\n    score: 0,\r\n    duplicateQuestionAnswer: [],\r\n    openedCards: 0,\r\n    previouslyOpenedCard: -1,\r\n    buttonColor: [],\r\n    winner: [],\r\n    showWinnerText: false,\r\n  };\r\n  async componentDidMount() {\r\n    const mapping = await this.initialise();\r\n    this.OddManGameLogic(mapping.length);\r\n    this.setState({\r\n      questionAnswer: mapping,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  OddManGameLogic = (length) => {\r\n    const random = this.random(length);\r\n    this.setState({\r\n      random: random,\r\n    });\r\n  };\r\n  initialise = () => {\r\n    let response = [\r\n      \"Yudhishthira;Bheema;Arjuna;Nakula;Ravana;Yuga;Ravana\",\r\n      \"Prithvi;Jala;Tejas;Vaayu;Grahana Indriya;5 Tanmaatras;Grahana Indriya\",\r\n      \"Shantanu;Devaki;Bheeshma;Ganga Devi;Devavrata;Pandu purvaja;Devaki\",\r\n      \"Krishna;Muchukunda;Kaalyavana;Matsya;Ranachhoda;Bhagawat 10 Skanda;Matsya\",\r\n      \"Arjuna;Drupada;Draupadi;Matsya-Bheda;Ghatotkacha;Swayamvara;Ghatotkacha\",\r\n      \"Ghatotkacha;Hidimba;Krishna;Bheema;Hidimbi;After Laakshaa Gruha;Krishna\",\r\n      \"Virat Raja;Bheeshma-Pratijnya;Bheema as Cook;Bruhannala;Kichaka;Ajnyaat-Vaas;Bheeshma-Pratijnya\",\r\n      \"Hanumaan;Sita;Chudamani;Kumbhakarna;Ashoka Vaatika;Sundarkaanda;Kumbhakarna\",\r\n    ];\r\n    let mapping = [];\r\n\r\n    response.map((eachItem, index) => {\r\n      let question = [];\r\n      let hint = \"\";\r\n      let answer = \"\";\r\n      question.push(eachItem.split(\";\")[0]);\r\n      question.push(eachItem.split(\";\")[1]);\r\n      question.push(eachItem.split(\";\")[2]);\r\n      question.push(eachItem.split(\";\")[3]);\r\n      question.push(eachItem.split(\";\")[4]);\r\n      hint = eachItem.split(\";\")[5];\r\n      answer = eachItem.split(\";\")[6];\r\n      mapping.push({\r\n        question: question,\r\n        hint: hint,\r\n        answer: answer,\r\n      });\r\n    });\r\n    return mapping;\r\n  };\r\n  random = (length) => {\r\n    return Math.floor(Math.random() * length);\r\n  };\r\n  // {this.includeButton(index, question)}\r\n  displayMatrix = () => {\r\n    const { questionAnswer, random } = this.state;\r\n\r\n    return questionAnswer[random].question.map((question, index) => (\r\n      <Col xs=\"8\" key={index}>\r\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\r\n      </Col>\r\n    ));\r\n  };\r\n  includeButton = (index, question) => {\r\n    const {\r\n      questionAnswer,\r\n      buttonColor,\r\n      disableAll,\r\n      isCorrect,\r\n      random,\r\n    } = this.state;\r\n    return (\r\n      <Button\r\n        color={\r\n          isCorrect && questionAnswer[random].answer === question\r\n            ? \"success\"\r\n            : disableAll\r\n            ? \"danger\"\r\n            : buttonColor[index]\r\n        }\r\n        key={index}\r\n        disabled={disableAll}\r\n        value={index}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          this.validateAnswer(question);\r\n        }}\r\n      >\r\n        {question}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  validateAnswer = (question) => {\r\n    let { questionAnswer, random, score } = this.state;\r\n    const validate = question === questionAnswer[random].answer;\r\n    score = validate ? ++score : score;\r\n    this.setState({\r\n      isCorrect: validate,\r\n      score: score,\r\n      disableAll: true,\r\n    });\r\n  };\r\n  changeBtnText = () => {\r\n    let { random, questionAnswer } = this.state;\r\n    this.setState({\r\n      hintText: questionAnswer[random].hint,\r\n    });\r\n  };\r\n\r\n  showHint = (event) => {\r\n    const { questionAnswer, hintText } = this.state;\r\n\r\n    return (\r\n      <div className=\"btn-arrange\">\r\n        <Button\r\n          color=\"warning\"\r\n          disabled={hintText !== \"Hint\"}\r\n          onClick={(event) => {\r\n            event.preventDefault();\r\n            this.changeBtnText();\r\n          }}\r\n        >\r\n          {hintText}\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  nextQuestion = () => {\r\n    const { questionAnswer } = this.state;\r\n    this.OddManGameLogic(questionAnswer.length);\r\n    this.displayMatrix();\r\n    this.setState({\r\n      isCorrect: false,\r\n      disableAll: false,\r\n      hintText: \"Hint\",\r\n    });\r\n  };\r\n  render() {\r\n    const { score, disableAll, isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <div> Loading....</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <h3 className=\"header\"> Find Odd Man Out</h3>\r\n        <div className=\"arrangeButtons\">\r\n          <Row>Score: (No. of right answers): {score}</Row>\r\n          <Row>{this.displayMatrix()}</Row>\r\n          <Row>{this.showHint()}</Row>\r\n          {disableAll && (\r\n            <Row>\r\n              <Button color=\"info\" onClick={this.nextQuestion}>\r\n                Next Question\r\n              </Button>\r\n            </Row>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OddManGame;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nconst TimerGame = () => {\r\n  const [rowText, setRowText] = useState([]);\r\n  useEffect(() => {\r\n    if (rowText.length === 0) {\r\n      let row = showMatrix();\r\n    }\r\n    showTextValues();\r\n  }, [rowText]);\r\n  const matrix = {\r\n    0: { color: \"#ccddee\", text: \"Easy\" },\r\n    1: { color: \"#aaddee\", text: \"Medium\" },\r\n    2: { color: \"#aabbff\", text: \"Difficult\" },\r\n  };\r\n\r\n  const showMatrix = () => {\r\n    let row = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      row.push(<tr>{includeRow(i)}</tr>);\r\n    }\r\n    setRowText(row);\r\n    console.log(row);\r\n    return row;\r\n  };\r\n  const includeRow = (row) => {\r\n    let col = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      col.push(\r\n        <td\r\n          bgColor={matrix[(row + i) % 3].color}\r\n          row={row}\r\n          col={i}\r\n          onClick={(event) => handleClick(event)}\r\n        >\r\n          <div class=\"scene\">\r\n            <div class=\"card\">\r\n              <div class=\"card__face card__face--front\">front</div>\r\n              <div class=\"card__face card__face--back\">back</div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n    return col;\r\n  };\r\n  async function handleClick(event) {\r\n    console.log(\"handleClick: \", event.target.classList);\r\n    var card = document.querySelector(\".card\");\r\n    card.addEventListener(\"click\", function () {\r\n      card.classList.toggle(\"is-flipped\");\r\n    });\r\n  }\r\n  function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n  const showTextValues = () => {\r\n    console.log(\"After ALL  \", rowText[0]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <strong className=\"scrollmenu\">Self Evaluation Questions::</strong>\r\n\r\n        <table>\r\n          <th>100 Points</th>\r\n          <th>200 Points</th>\r\n          <th>300 Points</th>\r\n          {rowText}\r\n        </table>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TimerGame;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport MemoryGame from \"./MemoryGame\";\r\nimport OddManGame from \"./OddManGame\";\r\nimport TimerGame from \"./TimerGame\";\r\n\r\nclass GameMenu extends React.Component {\r\n  state = {\r\n    showMemoryGame: false,\r\n    showOddManGame: false,\r\n    showTimerGame: false,\r\n  };\r\n  render() {\r\n    let { showMemoryGame, showOddManGame, showTimerGame } = this.state;\r\n    const me = this;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <div className=\"app\">\r\n          <Row>\r\n            {!showMemoryGame && !showOddManGame && !showTimerGame && (\r\n              <Col sm={{ size: \"auto\", offset: 1 }}>\r\n                <ButtonGroup>\r\n                  <Button href=\"/memory\">Memory Game</Button>\r\n                  <Button href=\"/oddman\">Odd man Game</Button>\r\n                  <Button href=\"/timer\">Timer Game</Button>\r\n                  <Button href=\"/quiz\">Quiz Game</Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GameMenu;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"./common/AppMenu\";\r\n//import { isValidLoginDetails } from \"../common/validate\";\r\n//import \"./styles.css\";\r\nclass QuestionSet extends React.Component {\r\n  state = {\r\n    faqSection: {},\r\n    items: {\r\n      question: \"\",\r\n      code: \"\",\r\n      category: [\r\n        {\r\n          title: \"\",\r\n          subCategory: [\r\n            {\r\n              itemName: \"\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  handleChange = (event) => {\r\n    let { items } = this.state;\r\n\r\n    if (event.target.name === \"title\") {\r\n      items.category[0].title = event.target.value;\r\n    } else if (event.target.name === \"subCategory\") {\r\n      items.category[0].subCategory[event.target.id].itemName =\r\n        event.target.value;\r\n      items.category[0].subCategory[event.target.id].index = event.target.id;\r\n    } else {\r\n      items[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  showitemNameTextBoxes = (event) => {\r\n    let { items } = this.state;\r\n    return items.category[0].subCategory.map((faq, index) => (\r\n      <div key={index}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"subCategory\"\r\n          id={index}\r\n          index={index}\r\n          placeholder=\"Enter Subcategory\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n  addItem = () => {\r\n    let { items } = this.state;\r\n    items.category[0].subCategory.push({ itemName: \"\" });\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { items } = this.state;\r\n    const me = this;\r\n    axios({\r\n      url: \"/faq/saveAnswer/\",\r\n      method: \"POST\",\r\n      data: items,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data saved\", response.data.error);\r\n        const showMsg = response.data.error ? \"error\" : \"success\";\r\n        me.setState({\r\n          showText: showMsg,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Some error occurred\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Add new Question Section</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        id=\"code\"\r\n                        placeholder=\"Enter Section Code (eg: avatars)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"categoryTitle\"\r\n                        placeholder=\"Enter Category Title (eg: Mahabharata)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup></FormGroup>\r\n                    <FormGroup>{this.showitemNameTextBoxes()}</FormGroup>\r\n                    <FormGroup>\r\n                      <Button onClick={this.addItem}>\r\n                        Add another subCategory\r\n                      </Button>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionSet;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"./common/AppMenu\";\r\n//import { isValidLoginDetails } from \"../common/validate\";\r\n//import \"./styles.css\";\r\nclass OtherPage extends React.Component {\r\n  state = {\r\n    question: [],\r\n    input: [],\r\n    mapping: [],\r\n    inputRequest: {\r\n      code: \"\",\r\n      input: [],\r\n    },\r\n  };\r\n  handleSubmit = (event) => {\r\n    let { selectedGame, input, mapping, inputRequest } = this.state;\r\n    event.preventDefault();\r\n    if (selectedGame === \"oddManOut\") {\r\n      mapping = input.join(\";\");\r\n    } else {\r\n      mapping[0] = input.slice(0, 3).join(\";\");\r\n      mapping[1] = input.slice(3, 6).join(\";\");\r\n      mapping[2] = input.slice(6, 9).join(\";\");\r\n      mapping[3] = input.slice(9, 12).join(\";\");\r\n      mapping[4] = input.slice(12, 15).join(\";\");\r\n    }\r\n    inputRequest.input.push(mapping);\r\n    inputRequest.code = selectedGame;\r\n    this.submitForm(inputRequest);\r\n  };\r\n  submitForm = (inputRequest) => {\r\n    const me = this;\r\n    axios({\r\n      url: \"/memory/saveGameQuestion/\",\r\n      method: \"POST\",\r\n      data: inputRequest,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data saved\", response.data.error);\r\n        const showMsg = response.data.error ? \"error\" : \"success\";\r\n        me.setState({\r\n          showText: showMsg,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Some error occurred\");\r\n      });\r\n  };\r\n  addOddManForm = () => {\r\n    var indents = [];\r\n    for (var index = 0; index < 7; index++) {\r\n      indents.push(\r\n        <Row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={index}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    return indents;\r\n  };\r\n  addMemoryForm = () => {\r\n    var indents = [];\r\n    var columnNo = -2;\r\n    for (var index = 0; index < 5; index++) {\r\n      columnNo = columnNo + 2;\r\n      indents.push(\r\n        <Row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index + 1}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index + 2}\r\n                name={index}\r\n                placeholder=\"Enter the answer\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    return indents;\r\n  };\r\n  handleChange = (event) => {\r\n    let { input } = this.state;\r\n    input[event.target.id] = event.target.value;\r\n    console.log(input);\r\n    this.setState({\r\n      input: input,\r\n    });\r\n  };\r\n  selectGame = (event) => {\r\n    this.setState({\r\n      selectedGame: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { selectedGame } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Add new Question Section</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"radio2\"\r\n                          value=\"memory\"\r\n                          onClick={this.selectGame}\r\n                        />{\" \"}\r\n                        Memory Game\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"radio2\"\r\n                          value=\"oddManOut\"\r\n                          onClick={this.selectGame}\r\n                        />{\" \"}\r\n                        Odd Man Out\r\n                      </Label>\r\n                    </FormGroup>\r\n\r\n                    {selectedGame === \"memory\" && this.addMemoryForm()}\r\n                    {selectedGame === \"oddManOut\" && this.addOddManForm()}\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherPage;\r\n","import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Container, Button } from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nconst QuizGame = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [error, setError] = React.useState(false);\r\n  const [helperText, setHelperText] = React.useState(\"Choose wisely\");\r\n  const handleRadioChange = (event) => {\r\n    setValue(event.target.value);\r\n    setHelperText(\" \");\r\n    setError(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (value === \"best\") {\r\n      setHelperText(\"You got it!\");\r\n      setError(false);\r\n    } else if (value === \"worst\") {\r\n      setHelperText(\"Sorry, wrong answer!\");\r\n      setError(true);\r\n    } else {\r\n      setHelperText(\"Please select an option.\");\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppMenu></AppMenu>\r\n      <Container>\r\n        <h3 className=\"header\"> Pop quiz</h3>\r\n        <div className=\"arrangeButtons\">\r\n          <form onSubmit={handleSubmit}>\r\n            <FormControl component=\"fieldset\" error={error}>\r\n              <FormLabel component=\"legend\"></FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"quiz\"\r\n                name=\"quiz\"\r\n                value={value}\r\n                onChange={handleRadioChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"best\"\r\n                  control={<Radio />}\r\n                  label=\"The best!\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"worst\"\r\n                  control={<Radio />}\r\n                  label=\"The worst.\"\r\n                />\r\n              </RadioGroup>\r\n              <FormHelperText>{helperText}</FormHelperText>\r\n              <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                Check Answer\r\n              </Button>\r\n            </FormControl>\r\n          </form>\r\n          >\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizGame;\r\n","import React from \"react\";\nimport HomePage from \"./landing/HomePage\";\nimport DetailedPage from \"./landing/DetailedPage\";\nimport GameMenu from \"./games/GameMenu\";\nimport QuestionSet from \"./QuestionSet\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport OtherPage from \"./OtherPage\";\nimport MemoryGame from \"./games/MemoryGame\";\nimport OddManGame from \"./games/OddManGame\";\nimport TimerGame from \"./games/TimerGame\";\nimport QuizGame from \"./games/QuizGame\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true} component={HomePage} />\n            <Route path=\"/detail\" exact={true} component={DetailedPage} />\n            <Route path=\"/games\" exact={true} component={GameMenu} />\n            <Route path=\"/addGameQuestion\" exact={true} component={OtherPage} />\n            <Route path=\"/others\" exact={true} component={QuestionSet} />\n            <Route path=\"/memory\" exact={true} component={MemoryGame} />\n            <Route path=\"/oddman\" exact={true} component={OddManGame} />\n            <Route path=\"/timer\" exact={true} component={TimerGame} />\n            <Route path=\"/quiz\" exact={true} component={QuizGame} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}