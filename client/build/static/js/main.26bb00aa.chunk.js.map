{"version":3,"sources":["images/logo.svg","images/FindMatch.svg","images/binoculars.svg","images/wsth.svg","images/memory.svg","images/timer.svg","landing/DetailedPage.js","common/AppMenu.js","landing/HomePage.js","games/OddManGame.js","utils/helper.js","games/TimerGame.js","games/WSTH.js","Main/MainPageContent.js","Main/Menu.js","games/MemoryGame.js","games/GameMenu.js","QuestionSet.js","OtherPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DetailedPage","props","state","showAnswerDetails","subCategory","handleClick","category","document","getElementById","hidden","innerHTML","title","map","eachSubCategory","itemName","join","className","Row","Col","sm","size","offset","ListGroup","displayList","showDetails","showAnswer","index","href","key","value","onClick","event","preventDefault","Container","id","AppMenu","useState","menuItems","setMenuItems","setShowInfoOutput","setShowGameOutput","setShowLoader","userSelection","setUserSelection","setUserSelectedHeader","setDetailedOutput","data","name","children","useEffect","getMenuItems","a","fetch","response","json","body","Menu","inverted","color","Item","Image","src","Dropdown","text","pointing","question","code","as","React","Component","OddManGame","isLoading","questionAnswer","hintText","isCorrect","disableAll","score","duplicateQuestionAnswer","openedCards","previouslyOpenedCard","buttonColor","winner","showWinnerText","OddManGameLogic","length","random","setState","initialise","mapping","eachItem","hint","answer","push","split","Math","floor","displayMatrix","xs","includeButton","Button","disabled","validateAnswer","validate","changeBtnText","showHint","nextQuestion","this","Header","Icon","Content","Message","style","marginLeft","marginRight","Label","marginBottom","findRandomNumber","TimerGame","startGame","setStartGame","allQuestions","setAllQuestions","questionToShow","setQuestionToShow","setAnswer","setRandomNumber","timeOut","setTimeOut","setKey","randomNo","prevKey","Fragment","primary","onComplete","isPlaying","duration","colors","remainingTime","fontSize","marginTop","WSTH","MainPageContent","Card","Group","itemsPerRow","memory","Meta","Description","extra","fluid","basic","binoculars","timer","wsth","MenuPage","MemoryGame","componentDidMount","clues","eachClue","nums","ranNums","i","j","splice","setTimeout","GameMenu","showMemoryGame","showOddManGame","showTimerGame","ButtonGroup","QuestionSet","faqSection","items","handleChange","target","showitemNameTextBoxes","faq","Input","type","placeholder","onChange","addItem","handleSubmit","me","axios","url","method","then","console","log","error","showMsg","showText","catch","Form","FormGroup","OtherPage","input","inputRequest","selectedGame","slice","submitForm","addOddManForm","indents","md","onBlur","addMemoryForm","columnNo","selectGame","check","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.26bb00aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.74c96e60.svg\";","module.exports = __webpack_public_path__ + \"static/media/FindMatch.2a7e3aab.svg\";","module.exports = __webpack_public_path__ + \"static/media/binoculars.c7dc475f.svg\";","module.exports = __webpack_public_path__ + \"static/media/wsth.9506b2c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/memory.ea92cb65.svg\";","module.exports = __webpack_public_path__ + \"static/media/timer.24fba1ef.svg\";","import React from \"react\";\nimport { ListGroup, Row, Col, Container } from \"reactstrap\";\nimport \"../App.css\";\nconst DetailedPage = (props) => {\n  const state = {\n    showAnswerDetails: true,\n    subCategory: [],\n  };\n  const showAnswer = () => {\n    const answer = props.showAnswer;\n    return answer.map((category, index) => (\n      <a\n        href=\"\"\n        key={index}\n        value={category.title}\n        onClick={(event) => {\n          event.preventDefault();\n          handleClick(category);\n        }}\n      >\n        {category.title}\n      </a>\n    ));\n  };\n  const handleClick = (category) => {\n    state.showAnswerDetails = false;\n    document.getElementById(\"DetailedAnswer\").hidden = false;\n    document.getElementById(\"DetailedAnswerTitle\").hidden = false;\n    document.getElementById(\"DetailedAnswerTitle\").innerHTML =\n      \"<h3>\" + category.title + \"</h3>\";\n    document.getElementById(\n      \"DetailedAnswer\"\n    ).innerHTML = category.subCategory\n      .map((eachSubCategory) => \"<h5>\" + eachSubCategory.itemName + \"</h5>\")\n      .join(\"\");\n  };\n  return (\n    <div className=\"app\">\n      <Row>\n        <Col sm={{ size: \"auto\", offset: 1 }}>\n          <ListGroup>{props.displayList}</ListGroup>\n        </Col>\n        <div className=\"scrollmenu\">{props.showDetails && showAnswer()}</div>\n        <Container>\n          <div\n            id=\"DetailedAnswerTitle\"\n            className=\"detailedTitle\"\n            hidden={state.showAnswerDetails}\n          ></div>\n\n          <div\n            id=\"DetailedAnswer\"\n            className=\"detailed\"\n            hidden={state.showAnswerDetails}\n          ></div>\n        </Container>\n      </Row>\n    </div>\n  );\n};\n\nexport default DetailedPage;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Dropdown,\n  Menu,\n  Segment,\n  Dimmer,\n  Loader,\n  Image,\n  Message,\n} from \"semantic-ui-react\";\nimport src from \"../images/logo.svg\";\nconst AppMenu = () => {\n  const [menuItems, setMenuItems] = useState([]);\n\n  const [showInfoOutput, setShowInfoOutput] = useState(false);\n  const [showGameOutput, setShowGameOutput] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [userSelection, setUserSelection] = useState(\"\");\n  const [userSelectedHeader, setUserSelectedHeader] = useState(\"\");\n  const [detailedOutput, setDetailedOutput] = useState({});\n  \n  \n  const handleClick = (event, data) => {\n    setShowLoader(true);\n    setUserSelection(data.name);\n    setUserSelectedHeader(data.children);\n  };\n  const handleGames = (event, data) => {\n    setUserSelectedHeader(data.name);\n    console.log(data);\n    setShowInfoOutput(false);\n    setShowGameOutput(true);\n  };\n  useEffect(() => {\n    getMenuItems();\n  }, [userSelection]);\n  const getMenuItems = async () => {\n    if (userSelection === \"\") {\n      const response = await fetch(\"/api/faqQuestionList\");\n      const body = await response.json();\n\n      setMenuItems(body);\n    } else {\n      const response = await fetch(\n        \"/api/faqSpecificAnswer?code=\" + userSelection\n      );\n      const body = await response.json();\n      setShowLoader(false);\n      setDetailedOutput(body);\n      setShowInfoOutput(true);\n      setShowGameOutput(false);\n    }\n  };\n  return (\n    <div>\n      <Menu inverted color=\"blue\" size=\"large\">\n        <Menu.Item>\n          <Image src={src} size=\"mini\" />\n        </Menu.Item>\n        <Dropdown text=\"Categories\" pointing className=\"link item\">\n          <Dropdown.Menu>\n            {menuItems.map(({ question, code }) => (\n              <Dropdown.Item name={code} onClick={handleClick}>\n                {question}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown text=\"Games\" pointing className=\"link item\">\n          <Dropdown.Menu>\n            <Dropdown.Item as=\"a\" href=\"/memory\" name=\"memory\">\n              Memory Game\n            </Dropdown.Item>\n            <Dropdown.Item as=\"a\" href=\"/oddMan\" name=\"oddMan\">\n              Find the odd man out\n            </Dropdown.Item>\n            <Dropdown.Item as=\"a\" href=\"/qna\" name=\"qna\">\n              Question and Answer\n            </Dropdown.Item>\n            <Dropdown.Item as=\"a\" href=\"/wsth\" name=\"wsth\">\n              WSTH\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu>\n    </div>\n  );\n};\n\nexport default AppMenu;\n","import React from \"react\";\nimport { ListGroupItem } from \"reactstrap\";\nimport DetailedPage from \"./DetailedPage\";\nimport \"../App.css\";\n\nimport AppMenu from \"../common/AppMenu\";\n\nclass HomePage extends React.Component {\n  state = {\n    questionList: [],\n    answer: [],\n    isLoading: true,\n    showDetails: false,\n  };\n  componentDidMount = () => {\n    this.getQuestionList();\n  };\n\n  async getQuestionList() {\n    const response = await fetch(\"/api/faqQuestionList\");\n    const body = await response.json();\n\n    this.setState({\n      questionList: body,\n      isLoading: false,\n    });\n  }\n\n  displayList = (questionList) => {\n    if (questionList.length < 1) return null;\n\n    return questionList.map((faq, index) => (\n      <div key={index} className=\"faq_blocks\">\n        <ListGroupItem\n          key={index}\n          data-id={faq.code}\n          color=\"success\"\n          tag=\"a\"\n          href=\"\"\n          onClick={this.showDetails.bind(this)}\n        >\n          {faq.question}\n        </ListGroupItem>\n      </div>\n    ));\n  };\n  showDetails = (event) => {\n    event.preventDefault();\n    const code = event.currentTarget.dataset.id;\n    this.setState({\n      isLoading: true,\n    });\n    this.getAnswer(code);\n  };\n  async getAnswer(code) {\n    const response = await fetch(\"/api/faqSpecificAnswer?code=\" + code);\n    const body = await response.json();\n\n    this.setState({\n      questionList: body,\n      isLoading: false,\n      showDetails: true,\n      answer: body[0] && body[0].category,\n    });\n\n    //this.showAnswer();\n  }\n\n  render() {\n    const { isLoading, questionList, showDetails, answer } = this.state;\n    if (isLoading) {\n      return <div> Loading....</div>;\n    }\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <p />\n        <div>Sameer</div>\n        <DetailedPage\n          displayList={this.displayList(questionList)}\n          showDetails={showDetails}\n          showAnswer={answer}\n          questionList={questionList}\n          showAnswerDetails={false}\n        ></DetailedPage>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport axios from \"axios\";\nimport AppMenu from \"../common/AppMenu\";\nimport \"../App.css\";\nimport \"./MemoryGame.css\";\nimport { Button, Row, Col, Alert } from \"reactstrap\";\nimport { Card, Header, Icon, Message, Label, Menu } from \"semantic-ui-react\";\n\nclass OddManGame extends React.Component {\n  state = {\n    isLoading: true,\n    questionAnswer: [],\n    hintText: \"Hint\",\n    isCorrect: false,\n    disableAll: false,\n    score: 0,\n    duplicateQuestionAnswer: [],\n    openedCards: 0,\n    previouslyOpenedCard: -1,\n    buttonColor: [],\n    winner: [],\n    showWinnerText: false,\n  };\n  async componentDidMount() {\n    const mapping = await this.initialise();\n    this.OddManGameLogic(mapping.length);\n    this.setState({\n      questionAnswer: mapping,\n      isLoading: false,\n    });\n  }\n  OddManGameLogic = (length) => {\n    const random = this.random(length);\n    this.setState({\n      random: random,\n    });\n  };\n  initialise = () => {\n    let response = [\n      \"Yudhishthira;Bheema;Arjuna;Nakula;Ravana;Yuga;Ravana\",\n      \"Prithvi;Jala;Tejas;Vaayu;Grahana Indriya;5 Tanmaatras;Grahana Indriya\",\n      \"Shantanu;Devaki;Bheeshma;Ganga Devi;Devavrata;Pandu purvaja;Devaki\",\n      \"Krishna;Muchukunda;Kaalyavana;Matsya;Ranachhoda;Bhagawat 10 Skanda;Matsya\",\n      \"Arjuna;Drupada;Draupadi;Matsya-Bheda;Ghatotkacha;Swayamvara;Ghatotkacha\",\n      \"Ghatotkacha;Hidimba;Krishna;Bheema;Hidimbi;After Laakshaa Gruha;Krishna\",\n      \"Virat Raja;Bheeshma-Pratijnya;Bheema as Cook;Bruhannala;Kichaka;Ajnyaat-Vaas;Bheeshma-Pratijnya\",\n      \"Hanumaan;Sita;Chudamani;Kumbhakarna;Ashoka Vaatika;Sundarkaanda;Kumbhakarna\",\n    ];\n    let mapping = [];\n\n    response.map((eachItem, index) => {\n      let question = [];\n      let hint = \"\";\n      let answer = \"\";\n      question.push(eachItem.split(\";\")[0]);\n      question.push(eachItem.split(\";\")[1]);\n      question.push(eachItem.split(\";\")[2]);\n      question.push(eachItem.split(\";\")[3]);\n      question.push(eachItem.split(\";\")[4]);\n      hint = eachItem.split(\";\")[5];\n      answer = eachItem.split(\";\")[6];\n      mapping.push({\n        question: question,\n        hint: hint,\n        answer: answer,\n      });\n    });\n    return mapping;\n  };\n  random = (length) => {\n    return Math.floor(Math.random() * length);\n  };\n  // {this.includeButton(index, question)}\n  displayMatrix = () => {\n    const { questionAnswer, random } = this.state;\n\n    return questionAnswer[random].question.map((question, index) => (\n      <Col xs=\"8\" key={index}>\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\n      </Col>\n    ));\n  };\n  includeButton = (index, question) => {\n    const {\n      questionAnswer,\n      buttonColor,\n      disableAll,\n      isCorrect,\n      random,\n    } = this.state;\n    return (\n      <Button\n        color={\n          isCorrect && questionAnswer[random].answer === question\n            ? \"success\"\n            : disableAll\n            ? \"danger\"\n            : buttonColor[index]\n        }\n        key={index}\n        disabled={disableAll}\n        value={index}\n        onClick={(event) => {\n          event.preventDefault();\n          this.validateAnswer(question);\n        }}\n      >\n        {question}\n      </Button>\n    );\n  };\n\n  validateAnswer = (question) => {\n    let { questionAnswer, random, score } = this.state;\n    const validate = question === questionAnswer[random].answer;\n    score = validate ? ++score : score;\n    this.setState({\n      isCorrect: validate,\n      score: score,\n      disableAll: true,\n    });\n  };\n  changeBtnText = () => {\n    let { random, questionAnswer } = this.state;\n    this.setState({\n      hintText: questionAnswer[random].hint,\n    });\n  };\n\n  showHint = (event) => {\n    const { questionAnswer, hintText } = this.state;\n\n    return (\n      <div className=\"btn-arrange\">\n        <Button\n          color=\"warning\"\n          disabled={hintText !== \"Hint\"}\n          onClick={(event) => {\n            event.preventDefault();\n            this.changeBtnText();\n          }}\n        >\n          {hintText}\n        </Button>\n      </div>\n    );\n  };\n  nextQuestion = () => {\n    const { questionAnswer } = this.state;\n    this.OddManGameLogic(questionAnswer.length);\n    this.displayMatrix();\n    this.setState({\n      isCorrect: false,\n      disableAll: false,\n      hintText: \"Hint\",\n    });\n  };\n  render() {\n    const { score, disableAll, isLoading } = this.state;\n    if (isLoading) {\n      return <div> Loading....</div>;\n    }\n    return (\n      <div>\n        <AppMenu />\n        <Header as=\"h2\" color=\"teal\">\n          <Icon name=\"game\" />\n          <Header.Content>Find The Odd Man Out</Header.Content>\n        </Header>\n        <Message style={{ marginLeft: \"4%\", marginRight: \"14%\" }}>\n          <Label size=\"medium\" color=\"brown\" style={{ marginBottom: \"3%\" }}>\n            Score: (No. of right answers): {score}\n          </Label>\n          <Row>{this.displayMatrix()}</Row>\n          <Row>{this.showHint()}</Row>\n          {disableAll && (\n            <Row>\n              <Button color=\"info\" onClick={this.nextQuestion}>\n                Next Question\n              </Button>\n            </Row>\n          )}\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default OddManGame;\n","export const findRandomNumber = (length) => {\n    return Math.floor(Math.random() * length);\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  Icon,\n  Header,\n  Container,\n  Button,\n} from \"semantic-ui-react\";\nimport {findRandomNumber} from '../utils/helper'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport AppMenu from \"../common/AppMenu\";\nfunction TimerGame() {\n  const [startGame, setStartGame] = useState(false);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [questionToShow, setQuestionToShow] = useState(\"\")\n  const [answer, setAnswer] = useState(\"\")\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [timeOut, setTimeOut] = useState(false)\n  const [key, setKey] = useState(0);\n  \n  useEffect(() => {\n    const questions = [\"Name 5th avataar in Dashaavatara;Vaamana\", \"How many number of Bhakti's are there?; 9\",\n  \"Who is the father of Kaalayavana?;Garga Acharya\",\"Brother of Satrajita Raja?; Prasenajit\",\"Husband of Damyanti?; Nala Raja\",\n\"Husband of Sukanya Devi?;Chyavana Rishi\", \"Who gave curse to Parikshit Raja?; Shrungi\", \"Shrungi's father's name?;Shameeka Rishi\"]\n    setAllQuestions(questions)\n  }, [])\n\n  const handleClick = () => {\n    const randomNo = findRandomNumber(allQuestions.length)\n    setRandomNumber(randomNo)\n    setQuestionToShow(allQuestions[randomNo].split(\";\")[0])\n    setAnswer(allQuestions[randomNo].split(\";\")[1])\n    setStartGame(true)\n    setTimeOut(false)\n    setKey(prevKey => prevKey + 1)\n  };\n\n  return (\n    <React.Fragment>\n      <AppMenu />\n      <Header as=\"h2\" color=\"teal\">\n        <Icon name=\"game\" />\n        <Header.Content>Question and Answer</Header.Content>\n      </Header>\n      <Container>\n        {!startGame && <Button primary onClick={handleClick}>Start Game</Button>}\n        \n        {startGame && <React.Fragment>\n          <CountdownCircleTimer\n          onComplete={() => setTimeOut(true)}\n          key={key}\n    isPlaying = {!timeOut}\n    duration={10}\n    size={80}\n    colors={[\n      ['#004777', 0.33],\n      ['#F7B801', 0.33],\n      ['#A30000', 0.33],\n    ]}\n  >\n    {({ remainingTime }) => remainingTime}\n  </CountdownCircleTimer>\n                      <span style={{color:\"red\", fontSize:\"large\"}}>Question: {questionToShow}</span>\n                      {timeOut && <React.Fragment>\n                         <div style={{marginTop:\"3%\",color:\"green\", fontSize:\"large\"}}>Answer: { answer}</div>\n                        <div>\n                        <Button primary style={{marginTop: \"3%\"}} onClick={handleClick}>Next Question</Button></div></React.Fragment>}\n        </React.Fragment>}\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default TimerGame;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Icon,\n  Header,\n  Container,\n  Button,\n} from \"semantic-ui-react\";\nimport {findRandomNumber} from '../utils/helper'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport AppMenu from \"../common/AppMenu\";\n\nconst WSTH = () => {\n\nconst [startGame, setStartGame] = useState(false);\nconst [allQuestions, setAllQuestions] = useState([]);\nconst [questionToShow, setQuestionToShow] = useState(\"\")\nconst [answer, setAnswer] = useState(\"\")\nconst [randomNumber, setRandomNumber] = useState(0);\nconst [timeOut, setTimeOut] = useState(false)\nconst [key, setKey] = useState(0);\n    useEffect(() => {\n        const allQuestions = [\"Yontah Pravishya MamaVaacha...; Prahlad to Vishnu\",\"Yato Dharmah tato jaya; Gaandhari to Duryodhana\",\n    \"Ashwathama Hatah.. Naro va Kunjaro va; Yudhishtra to Dronacharya\", \"Shravanam Kirtam Vishnum...; Prahlaad to Hirankyakshipu\",\n    \"Bheeemacha Balabhadracha Madra-rajacha Veeryavaan...; Duryodhan to All\", \"Jaanami Dharma na cha may pravrutti...; Duryodhan to Gandhari\",\n    \"Kim Pashu Purva dehe; Akshobhay teertha to Dhondopant Deshpande (Jayateertha)\", \"Viraat nagam ramyam, gacha maano;Yudhisthira praying to Duraga devi\"]\n    setAllQuestions(allQuestions)\n    },[])\n    const handleClick = () => {\n        const randomNo = findRandomNumber(allQuestions.length)\n        setRandomNumber(randomNo)\n        setQuestionToShow(allQuestions[randomNo].split(\";\")[0])\n        setAnswer(allQuestions[randomNo].split(\";\")[1])\n        setStartGame(true)\n        setTimeOut(false)\n        setKey(prevKey => prevKey + 1)\n      };\n    \n      return (\n        <React.Fragment>\n          <AppMenu />\n          <Header as=\"h2\" color=\"teal\">\n            <Icon name=\"game\" />\n            <Header.Content>Who Said To Home</Header.Content>\n          </Header>\n          <Container>\n            {!startGame && <Button primary onClick={handleClick}>Start Game</Button>}\n            \n            {startGame && <React.Fragment>\n              <CountdownCircleTimer\n              onComplete={() => setTimeOut(true)}\n              key={key}\n        isPlaying = {!timeOut}\n        duration={10}\n        size={80}\n        colors={[\n          ['#004777', 0.33],\n          ['#F7B801', 0.33],\n          ['#A30000', 0.33],\n        ]}\n      >\n        {({ remainingTime }) => remainingTime}\n      </CountdownCircleTimer>\n                          <span style={{color:\"red\", fontSize:\"large\"}}>Question: {questionToShow}</span>\n                          {timeOut && <React.Fragment>\n                             <div style={{marginTop:\"3%\",color:\"green\", fontSize:\"large\"}}>Answer: { answer}</div>\n                            <div>\n                            <Button primary style={{marginTop: \"3%\"}} onClick={handleClick}>Next Question</Button></div></React.Fragment>}\n            </React.Fragment>}\n          </Container>\n        </React.Fragment>\n      );\n}\n\nexport default WSTH;","import React from \"react\";\nimport { Button, Card, Icon, Image } from \"semantic-ui-react\";\nimport binoculars from \"../images/binoculars.svg\";\nimport wsth from \"../images/wsth.svg\";\nimport memory from \"../images/memory.svg\";\nimport timer from \"../images/timer.svg\";\nconst MainPageContent = (props) => (\n    <>\n  <Card.Group itemsPerRow={2}>\n    <Card>\n      <Card.Content>\n      <Image src={memory} size=\"mini\" />\n        <Card.Header>Memory Game</Card.Header>\n        <Card.Meta>Learn and Play!</Card.Meta>\n        <Card.Description>\n          Open anyone of the closed cards and it will reveal a question. Match the corresponding correct\n          card.\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n      <div className=\"ui two buttons\">\n          <Button as=\"a\" href=\"/memory\" fluid basic color=\"green\">\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n      <Image src={binoculars} size=\"mini\" />\n        <Card.Header>Find the Odd Man Out</Card.Header>\n        <Card.Meta>Know your history!</Card.Meta>\n        <Card.Description>\n          You will shown with question with some options. Identify the out-of-the-context option.\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button  as=\"a\" href=\"/oddMan\"  fluid basic color=\"green\">\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n      <Image src={timer} size=\"mini\" />\n        <Card.Header>Simple Timer Game</Card.Header>\n        <Card.Meta>You have only 10 seconds!</Card.Meta>\n        <Card.Description>\n          You will have 10 seconds to answer. Ready for this challenge?\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button  as=\"a\" href=\"/qna\"  basic color=\"green\">\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n      <Image src={wsth} size=\"mini\" />\n        <Card.Header>Who said to whom</Card.Header>\n        <Card.Meta>Do you know these famous lines?!</Card.Meta>\n        <Card.Description>\n          Do you remember these statements. Up for this?!\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button  as=\"a\" href=\"/wsth\"  basic color=\"green\">\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  </Card.Group>\n  </>\n);\n\nexport default MainPageContent;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Dropdown,\n  Menu,\n  Segment,\n  Dimmer,\n  Loader,\n  Image,\n  Message,\n} from \"semantic-ui-react\";\nimport DetailedPage from \"./DetailedPage\";\nimport src from \"../images/logo.svg\";\nimport Memory from \"../Game/Memory\";\nimport MemoryGame from \"../games/MemoryGame\";\nimport OddManGame from \"../games/OddManGame\";\nimport TimerGame from \"../games/TimerGame\";\nimport WSTH from \"../games/WSTH\";\nimport MainPageContent from \"./MainPageContent\";\nimport AppMenu from \"../common/AppMenu\";\nconst MenuPage = () => {\n  \n  return (\n    <React.Fragment>\n      <AppMenu />\n      <Message>\n      <MainPageContent />\n      </Message>\n    </React.Fragment>\n  );\n};\nexport default MenuPage;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport \"./MemoryGame.css\";\nimport { Button, Row, Col, Alert } from \"reactstrap\";\nimport { Card, Header, Icon, Message, Label } from \"semantic-ui-react\";\nimport MenuPage from \"../Main/Menu\";\n\nimport AppMenu from \"../common/AppMenu\";\n\nclass MemoryGame extends React.Component {\n  state = {\n    questionAnswer: [],\n    duplicateQuestionAnswer: [],\n    openedCards: 0,\n    score: 0,\n    previouslyOpenedCard: -1,\n    buttonColor: [],\n    winner: [],\n    showWinnerText: false,\n  };\n  initialise = () => {\n    var response = [\n      \"Moola Roopa Of Ashwatthama;Moola Roopa Of Shuka;Rudra\",\n      \"Moola Roopa Of Bheema;Moola Roopa Of Hanuma;Vaayu\",\n      \"Who Killed Meghadoot Asur;Shatrughna's brother;Lakshman\",\n      \"Poorvashrama Name Vasudeva;Paajaka;Madhwacharya\",\n      \"Son of Satyavati Devi;Veda vibhaaga Kartru;Vedavyaas\",\n    ];\n    let mapping = [];\n\n    response.map((eachItem, index) => {\n      let question = [];\n      let answer = \"\";\n      question.push(eachItem.split(\";\")[0]);\n      question.push(eachItem.split(\";\")[1]);\n      answer = eachItem.split(\";\")[2];\n      mapping.push({\n        question: question,\n        answer: answer,\n      });\n    });\n    return mapping;\n  };\n  componentDidMount = () => {\n    const mapping = this.initialise();\n    let questionAnswer = [];\n    const duplicateQuestionAnswer = [];\n    const color = [];\n    mapping.map((clues) =>\n      clues.question.map(\n        (eachClue) => (\n          questionAnswer.push(eachClue + \";\" + clues.answer),\n          duplicateQuestionAnswer.push(\"Find Match\"),\n          color.push(\"info\")\n        )\n      )\n    );\n    questionAnswer = this.random(questionAnswer);\n    this.setState({\n      questionAnswer: questionAnswer,\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\n      buttonColor: color,\n    });\n  };\n  random = (nums) => {\n    var ranNums = [],\n      i = nums.length,\n      j = 0;\n    while (i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      ranNums.push(nums[j]);\n      nums.splice(j, 1);\n    }\n    return ranNums;\n  };\n  // {this.includeButton(index, question)}\n  displayMatrix = () => {\n    const { duplicateQuestionAnswer } = this.state;\n\n    return duplicateQuestionAnswer.map((question, index) => (\n      <Col xs=\"6\" key={index}>\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\n      </Col>\n    ));\n  };\n  includeButton = (index, question) => {\n    const { buttonColor } = this.state;\n    return (\n      <Button\n        color={buttonColor[index]}\n        key={index}\n        disabled={\n          buttonColor[index] === \"warning\" || buttonColor[index] === \"success\"\n        }\n        value={index}\n        onClick={(event) => {\n          event.preventDefault();\n          this.changeBtnText(index);\n        }}\n      >\n        {question}\n      </Button>\n    );\n  };\n\n  changeBtnText = (index) => {\n    let {\n      buttonColor,\n      duplicateQuestionAnswer,\n      questionAnswer,\n      score,\n    } = this.state;\n    buttonColor[index] = \"warning\";\n    score++;\n    duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\n\n    setTimeout(() => {\n      this.validate(index);\n    }, 2000);\n    this.setState({\n      buttonColor: buttonColor,\n      score: score,\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\n    });\n  };\n  validate = (index) => {\n    let {\n      duplicateQuestionAnswer,\n      questionAnswer,\n      openedCards,\n      previouslyOpenedCard,\n      buttonColor,\n      winner,\n      showWinnerText,\n    } = this.state;\n\n    if (openedCards === 1) {\n      openedCards = 0;\n      if (\n        questionAnswer[index].split(\";\")[1] ===\n        questionAnswer[previouslyOpenedCard].split(\";\")[1]\n      ) {\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"success\";\n        winner.push(index);\n        winner.push(previouslyOpenedCard);\n        if (winner.length === questionAnswer.length) {\n          showWinnerText = true;\n        }\n        duplicateQuestionAnswer[index] = questionAnswer[index];\n        duplicateQuestionAnswer[previouslyOpenedCard] =\n          questionAnswer[previouslyOpenedCard];\n      } else {\n        duplicateQuestionAnswer[index] = duplicateQuestionAnswer[\n          previouslyOpenedCard\n        ] = \"Find Match\";\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"info\";\n      }\n    } else {\n      openedCards++;\n      duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\n    }\n\n    this.setState({\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\n      previouslyOpenedCard: index,\n      openedCards: openedCards,\n      showWinnerText: showWinnerText,\n      winner: winner,\n    });\n  };\n  render() {\n    const { score, showWinnerText } = this.state;\n    return (\n      <div>\n        <AppMenu />\n        <Header as=\"h2\" color=\"teal\">\n          <Icon name=\"game\" />\n          <Header.Content>Memory Game</Header.Content>\n        </Header>\n        <Message style={{ marginLeft: \"4%\", marginRight: \"14%\" }}>\n          <Label size=\"medium\" color=\"brown\" style={{ marginBottom: \"3%\" }}>\n            Score : {score}\n          </Label>\n\n          <Row>{this.displayMatrix()}</Row>\n          {showWinnerText && (\n            <Row>\n              <Header as=\"h2\" color=\"olive\">\n                <Icon name=\"winner\" />\n                <Header.Content>Congratulations! You Win</Header.Content>\n              </Header>\n            </Row>\n          )}\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default MemoryGame;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  ButtonGroup,\n  Button,\n} from \"reactstrap\";\nimport AppMenu from \"../common/AppMenu\";\nimport MemoryGame from \"./MemoryGame\";\nimport OddManGame from \"./OddManGame\";\nimport TimerGame from \"./TimerGame\";\n\nclass GameMenu extends React.Component {\n  state = {\n    showMemoryGame: false,\n    showOddManGame: false,\n    showTimerGame: false,\n  };\n  render() {\n    let { showMemoryGame, showOddManGame, showTimerGame } = this.state;\n    const me = this;\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <p />\n        <div className=\"app\">\n          <Row>\n            {!showMemoryGame && !showOddManGame && !showTimerGame && (\n              <Col sm={{ size: \"auto\", offset: 1 }}>\n                <ButtonGroup>\n                  <Button href=\"/memory\">Memory Game</Button>\n                  <Button href=\"/oddman\">Odd man Game</Button>\n                  <Button href=\"/timer\">Timer Game</Button>\n                  <Button href=\"/quiz\">Quiz Game</Button>\n                </ButtonGroup>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default GameMenu;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Col,\n  Container,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nimport AppMenu from \"./common/AppMenu\";\n//import { isValidLoginDetails } from \"../common/validate\";\n//import \"./styles.css\";\nclass QuestionSet extends React.Component {\n  state = {\n    faqSection: {},\n    items: {\n      question: \"\",\n      code: \"\",\n      category: [\n        {\n          title: \"\",\n          subCategory: [\n            {\n              itemName: \"\",\n            },\n          ],\n        },\n      ],\n    },\n  };\n  handleChange = (event) => {\n    let { items } = this.state;\n\n    if (event.target.name === \"title\") {\n      items.category[0].title = event.target.value;\n    } else if (event.target.name === \"subCategory\") {\n      items.category[0].subCategory[event.target.id].itemName =\n        event.target.value;\n      items.category[0].subCategory[event.target.id].index = event.target.id;\n    } else {\n      items[event.target.name] = event.target.value;\n    }\n    this.setState({\n      items: items,\n    });\n  };\n  showitemNameTextBoxes = (event) => {\n    let { items } = this.state;\n    return items.category[0].subCategory.map((faq, index) => (\n      <div key={index}>\n        <Input\n          type=\"text\"\n          name=\"subCategory\"\n          id={index}\n          index={index}\n          placeholder=\"Enter Subcategory\"\n          onChange={this.handleChange}\n        />\n      </div>\n    ));\n  };\n  addItem = () => {\n    let { items } = this.state;\n    items.category[0].subCategory.push({ itemName: \"\" });\n    this.setState({\n      items: items,\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { items } = this.state;\n    const me = this;\n    axios({\n      url: \"/faq/saveAnswer/\",\n      method: \"POST\",\n      data: items,\n    })\n      .then((response) => {\n        console.log(\"Data saved\", response.data.error);\n        const showMsg = response.data.error ? \"error\" : \"success\";\n        me.setState({\n          showText: showMsg,\n        });\n      })\n      .catch(() => {\n        console.log(\"Some error occurred\");\n      });\n  };\n  render() {\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <Container>\n          <Row>\n            <Col xs=\"6\">\n              <div className=\"headersection\">\n                <h3>Add new Question Section</h3>\n                <div className=\"mainsection\">\n                  <Form>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"code\"\n                        id=\"code\"\n                        placeholder=\"Enter Section Code (eg: avatars)\"\n                        onChange={this.handleChange}\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"categoryTitle\"\n                        placeholder=\"Enter Category Title (eg: Mahabharata)\"\n                        onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup></FormGroup>\n                    <FormGroup>{this.showitemNameTextBoxes()}</FormGroup>\n                    <FormGroup>\n                      <Button onClick={this.addItem}>\n                        Add another subCategory\n                      </Button>\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Button onClick={this.handleSubmit}>Submit</Button>\n                    </FormGroup>\n                  </Form>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default QuestionSet;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Col,\n  Container,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport AppMenu from \"./common/AppMenu\";\n//import { isValidLoginDetails } from \"../common/validate\";\n//import \"./styles.css\";\nclass OtherPage extends React.Component {\n  state = {\n    question: [],\n    input: [],\n    mapping: [],\n    inputRequest: {\n      code: \"\",\n      input: [],\n    },\n  };\n  handleSubmit = (event) => {\n    let { selectedGame, input, mapping, inputRequest } = this.state;\n    event.preventDefault();\n    if (selectedGame === \"oddManOut\") {\n      mapping = input.join(\";\");\n    } else {\n      mapping[0] = input.slice(0, 3).join(\";\");\n      mapping[1] = input.slice(3, 6).join(\";\");\n      mapping[2] = input.slice(6, 9).join(\";\");\n      mapping[3] = input.slice(9, 12).join(\";\");\n      mapping[4] = input.slice(12, 15).join(\";\");\n    }\n    inputRequest.input.push(mapping);\n    inputRequest.code = selectedGame;\n    this.submitForm(inputRequest);\n  };\n  submitForm = (inputRequest) => {\n    const me = this;\n    axios({\n      url: \"/memory/saveGameQuestion/\",\n      method: \"POST\",\n      data: inputRequest,\n    })\n      .then((response) => {\n        console.log(\"Data saved\", response.data.error);\n        const showMsg = response.data.error ? \"error\" : \"success\";\n        me.setState({\n          showText: showMsg,\n        });\n      })\n      .catch(() => {\n        console.log(\"Some error occurred\");\n      });\n  };\n  addOddManForm = () => {\n    var indents = [];\n    for (var index = 0; index < 7; index++) {\n      indents.push(\n        <Row>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={index}\n                name={index}\n                placeholder=\"Enter the question\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n        </Row>\n      );\n    }\n    return indents;\n  };\n  addMemoryForm = () => {\n    var indents = [];\n    var columnNo = -2;\n    for (var index = 0; index < 5; index++) {\n      columnNo = columnNo + 2;\n      indents.push(\n        <Row>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={columnNo + index}\n                name={index}\n                placeholder=\"Enter the question\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={columnNo + index + 1}\n                name={index}\n                placeholder=\"Enter the question\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={columnNo + index + 2}\n                name={index}\n                placeholder=\"Enter the answer\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n        </Row>\n      );\n    }\n    return indents;\n  };\n  handleChange = (event) => {\n    let { input } = this.state;\n    input[event.target.id] = event.target.value;\n    console.log(input);\n    this.setState({\n      input: input,\n    });\n  };\n  selectGame = (event) => {\n    this.setState({\n      selectedGame: event.target.value,\n    });\n  };\n  render() {\n    const { selectedGame } = this.state;\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <Container>\n          <Row>\n            <Col xs=\"6\">\n              <div className=\"headersection\">\n                <h3>Add new Question Section</h3>\n                <div className=\"mainsection\">\n                  <Form>\n                    <FormGroup check>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name=\"radio2\"\n                          value=\"memory\"\n                          onClick={this.selectGame}\n                        />{\" \"}\n                        Memory Game\n                      </Label>\n                    </FormGroup>\n                    <FormGroup check>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name=\"radio2\"\n                          value=\"oddManOut\"\n                          onClick={this.selectGame}\n                        />{\" \"}\n                        Odd Man Out\n                      </Label>\n                    </FormGroup>\n\n                    {selectedGame === \"memory\" && this.addMemoryForm()}\n                    {selectedGame === \"oddManOut\" && this.addOddManForm()}\n                    <FormGroup>\n                      <Button onClick={this.handleSubmit}>Submit</Button>\n                    </FormGroup>\n                  </Form>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default OtherPage;\n","import React from \"react\";\nimport HomePage from \"./landing/HomePage\";\nimport DetailedPage from \"./landing/DetailedPage\";\nimport GameMenu from \"./games/GameMenu\";\nimport QuestionSet from \"./QuestionSet\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport OtherPage from \"./OtherPage\";\nimport MemoryGame from \"./games/MemoryGame\";\nimport OddManGame from \"./games/OddManGame\";\nimport TimerGame from \"./games/TimerGame\";\nimport MenuPage from \"./Main/Menu\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport WSTH from \"./games/WSTH\";\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true} component={MenuPage} />\n            <Route path=\"/detail\" exact={true} component={DetailedPage} />\n            <Route path=\"/games\" exact={true} component={GameMenu} />\n            <Route path=\"/addGameQuestion\" exact={true} component={OtherPage} />\n            <Route path=\"/others\" exact={true} component={QuestionSet} />\n            <Route path=\"/memory\" exact={true} component={MemoryGame} />\n            <Route path=\"/oddman\" exact={true} component={OddManGame} />\n            <Route path=\"/qna\" exact={true} component={TimerGame} />\n            <Route path=\"/wsth\" exact={true} component={WSTH} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}