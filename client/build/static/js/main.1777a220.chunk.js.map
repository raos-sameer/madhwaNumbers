{"version":3,"sources":["images/logo.svg","images/FindMatch.svg","images/binoculars.svg","images/wsth.svg","images/memory.svg","images/timer.svg","landing/DetailedPage.js","common/AppMenu.js","landing/HomePage.js","games/MemoryGame.js","games/OddManGame.js","utils/helper.js","games/TimerGame.js","games/GameMenu.js","QuestionSet.js","OtherPage.js","games/QuizGame.js","Main/ShowContent.js","Main/DetailedPage.js","games/WSTH.js","Main/MainPageContent.js","Main/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DetailedPage","props","state","showAnswerDetails","subCategory","handleClick","category","document","getElementById","hidden","innerHTML","title","map","eachSubCategory","itemName","join","className","Row","Col","sm","size","offset","ListGroup","displayList","showDetails","showAnswer","index","href","key","value","onClick","event","preventDefault","Container","id","AppMenu","Navbar","color","dark","expand","NavbarBrand","Nav","navbar","NavItem","NavLink","Component","React","MemoryGame","questionAnswer","duplicateQuestionAnswer","openedCards","score","previouslyOpenedCard","buttonColor","winner","showWinnerText","initialise","mapping","eachItem","answer","question","push","split","componentDidMount","clues","eachClue","random","setState","nums","ranNums","i","length","j","Math","floor","splice","displayMatrix","xs","includeButton","Button","disabled","changeBtnText","setTimeout","validate","this","Header","as","Icon","name","Content","Message","style","marginLeft","marginRight","Label","marginBottom","OddManGame","isLoading","hintText","isCorrect","disableAll","OddManGameLogic","hint","validateAnswer","showHint","nextQuestion","findRandomNumber","TimerGame","useState","startGame","setStartGame","allQuestions","setAllQuestions","questionToShow","setQuestionToShow","setAnswer","setRandomNumber","timeOut","setTimeOut","setKey","useEffect","randomNo","prevKey","Fragment","primary","onComplete","isPlaying","duration","colors","remainingTime","fontSize","marginTop","GameMenu","showMemoryGame","showOddManGame","showTimerGame","ButtonGroup","QuestionSet","faqSection","items","code","handleChange","target","showitemNameTextBoxes","faq","Input","type","placeholder","onChange","addItem","handleSubmit","me","axios","url","method","data","then","response","console","log","error","showMsg","showText","catch","Form","FormGroup","OtherPage","input","inputRequest","selectedGame","slice","submitForm","addOddManForm","indents","md","onBlur","addMemoryForm","columnNo","selectGame","check","QuizGame","setValue","setError","helperText","setHelperText","onSubmit","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","FormHelperText","variant","ShowContent","List","animated","contenInfo","Item","detailedOutput","activeItem","setActiveItem","showContent","setShowContent","setContentInfo","userSelectedHeader","Menu","pointing","active","WSTH","MainPageContent","Card","Group","itemsPerRow","Image","src","memory","Meta","Description","extra","fluid","basic","setUserSelectedHeader","binoculars","timer","wsth","MenuPage","menuItems","setMenuItems","showInfoOutput","setShowInfoOutput","setShowGameOutput","showLoader","setShowLoader","userSelection","setUserSelection","setDetailedOutput","getMenuItems","a","fetch","json","body","children","handleGames","inverted","Dropdown","text","Segment","Dimmer","Loader","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1777a220.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.74c96e60.svg\";","module.exports = __webpack_public_path__ + \"static/media/FindMatch.2a7e3aab.svg\";","module.exports = __webpack_public_path__ + \"static/media/binoculars.c7dc475f.svg\";","module.exports = __webpack_public_path__ + \"static/media/wsth.9506b2c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/memory.ea92cb65.svg\";","module.exports = __webpack_public_path__ + \"static/media/timer.24fba1ef.svg\";","import React from \"react\";\nimport { ListGroup, Row, Col, Container } from \"reactstrap\";\nimport \"../App.css\";\nconst DetailedPage = (props) => {\n  const state = {\n    showAnswerDetails: true,\n    subCategory: [],\n  };\n  const showAnswer = () => {\n    const answer = props.showAnswer;\n    return answer.map((category, index) => (\n      <a\n        href=\"\"\n        key={index}\n        value={category.title}\n        onClick={(event) => {\n          event.preventDefault();\n          handleClick(category);\n        }}\n      >\n        {category.title}\n      </a>\n    ));\n  };\n  const handleClick = (category) => {\n    state.showAnswerDetails = false;\n    document.getElementById(\"DetailedAnswer\").hidden = false;\n    document.getElementById(\"DetailedAnswerTitle\").hidden = false;\n    document.getElementById(\"DetailedAnswerTitle\").innerHTML =\n      \"<h3>\" + category.title + \"</h3>\";\n    document.getElementById(\n      \"DetailedAnswer\"\n    ).innerHTML = category.subCategory\n      .map((eachSubCategory) => \"<h5>\" + eachSubCategory.itemName + \"</h5>\")\n      .join(\"\");\n  };\n  return (\n    <div className=\"app\">\n      <Row>\n        <Col sm={{ size: \"auto\", offset: 1 }}>\n          <ListGroup>{props.displayList}</ListGroup>\n        </Col>\n        <div className=\"scrollmenu\">{props.showDetails && showAnswer()}</div>\n        <Container>\n          <div\n            id=\"DetailedAnswerTitle\"\n            className=\"detailedTitle\"\n            hidden={state.showAnswerDetails}\n          ></div>\n\n          <div\n            id=\"DetailedAnswer\"\n            className=\"detailed\"\n            hidden={state.showAnswerDetails}\n          ></div>\n        </Container>\n      </Row>\n    </div>\n  );\n};\n\nexport default DetailedPage;\n","import React, { Component } from \"react\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\nclass AppMenu extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"/\">Tatwas Information</NavbarBrand>\n\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/games\">Games</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/others\">Other Information</NavLink>\n            </NavItem>\n          </Nav>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default AppMenu;\n","import React from \"react\";\nimport { ListGroupItem } from \"reactstrap\";\nimport DetailedPage from \"./DetailedPage\";\nimport \"../App.css\";\n\nimport AppMenu from \"../common/AppMenu\";\n\nclass HomePage extends React.Component {\n  state = {\n    questionList: [],\n    answer: [],\n    isLoading: true,\n    showDetails: false,\n  };\n  componentDidMount = () => {\n    this.getQuestionList();\n  };\n\n  async getQuestionList() {\n    const response = await fetch(\"/api/faqQuestionList\");\n    const body = await response.json();\n\n    this.setState({\n      questionList: body,\n      isLoading: false,\n    });\n  }\n\n  displayList = (questionList) => {\n    if (questionList.length < 1) return null;\n\n    return questionList.map((faq, index) => (\n      <div key={index} className=\"faq_blocks\">\n        <ListGroupItem\n          key={index}\n          data-id={faq.code}\n          color=\"success\"\n          tag=\"a\"\n          href=\"\"\n          onClick={this.showDetails.bind(this)}\n        >\n          {faq.question}\n        </ListGroupItem>\n      </div>\n    ));\n  };\n  showDetails = (event) => {\n    event.preventDefault();\n    const code = event.currentTarget.dataset.id;\n    this.setState({\n      isLoading: true,\n    });\n    this.getAnswer(code);\n  };\n  async getAnswer(code) {\n    const response = await fetch(\"/api/faqSpecificAnswer?code=\" + code);\n    const body = await response.json();\n\n    this.setState({\n      questionList: body,\n      isLoading: false,\n      showDetails: true,\n      answer: body[0] && body[0].category,\n    });\n\n    //this.showAnswer();\n  }\n\n  render() {\n    const { isLoading, questionList, showDetails, answer } = this.state;\n    if (isLoading) {\n      return <div> Loading....</div>;\n    }\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <p />\n        <div>Sameer</div>\n        <DetailedPage\n          displayList={this.displayList(questionList)}\n          showDetails={showDetails}\n          showAnswer={answer}\n          questionList={questionList}\n          showAnswerDetails={false}\n        ></DetailedPage>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport \"./MemoryGame.css\";\nimport { Button, Row, Col, Alert } from \"reactstrap\";\nimport { Card, Header, Icon, Message, Label, Menu } from \"semantic-ui-react\";\n\nimport AppMenu from \"../common/AppMenu\";\n\nclass MemoryGame extends React.Component {\n  state = {\n    questionAnswer: [],\n    duplicateQuestionAnswer: [],\n    openedCards: 0,\n    score: 0,\n    previouslyOpenedCard: -1,\n    buttonColor: [],\n    winner: [],\n    showWinnerText: false,\n  };\n  initialise = () => {\n    var response = [\n      \"Moola Roopa Of Ashwatthama;Moola Roopa Of Shuka;Rudra\",\n      \"Moola Roopa Of Bheema;Moola Roopa Of Hanuma;Vaayu\",\n      \"Who Killed Meghadoot Asur;Shatrughna's brother;Lakshman\",\n      \"Poorvashrama Name Vasudeva;Paajaka;Madhwacharya\",\n      \"Son of Satyavati Devi;Veda vibhaaga Kartru;Vedavyaas\",\n    ];\n    let mapping = [];\n\n    response.map((eachItem, index) => {\n      let question = [];\n      let answer = \"\";\n      question.push(eachItem.split(\";\")[0]);\n      question.push(eachItem.split(\";\")[1]);\n      answer = eachItem.split(\";\")[2];\n      mapping.push({\n        question: question,\n        answer: answer,\n      });\n    });\n    return mapping;\n  };\n  componentDidMount = () => {\n    const mapping = this.initialise();\n    let questionAnswer = [];\n    const duplicateQuestionAnswer = [];\n    const color = [];\n    mapping.map((clues) =>\n      clues.question.map(\n        (eachClue) => (\n          questionAnswer.push(eachClue + \";\" + clues.answer),\n          duplicateQuestionAnswer.push(\"Find Match\"),\n          color.push(\"info\")\n        )\n      )\n    );\n    questionAnswer = this.random(questionAnswer);\n    this.setState({\n      questionAnswer: questionAnswer,\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\n      buttonColor: color,\n    });\n  };\n  random = (nums) => {\n    var ranNums = [],\n      i = nums.length,\n      j = 0;\n    while (i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      ranNums.push(nums[j]);\n      nums.splice(j, 1);\n    }\n    return ranNums;\n  };\n  // {this.includeButton(index, question)}\n  displayMatrix = () => {\n    const { duplicateQuestionAnswer } = this.state;\n\n    return duplicateQuestionAnswer.map((question, index) => (\n      <Col xs=\"6\" key={index}>\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\n      </Col>\n    ));\n  };\n  includeButton = (index, question) => {\n    const { buttonColor } = this.state;\n    return (\n      <Button\n        color={buttonColor[index]}\n        key={index}\n        disabled={\n          buttonColor[index] === \"warning\" || buttonColor[index] === \"success\"\n        }\n        value={index}\n        onClick={(event) => {\n          event.preventDefault();\n          this.changeBtnText(index);\n        }}\n      >\n        {question}\n      </Button>\n    );\n  };\n\n  changeBtnText = (index) => {\n    let {\n      buttonColor,\n      duplicateQuestionAnswer,\n      questionAnswer,\n      score,\n    } = this.state;\n    buttonColor[index] = \"warning\";\n    score++;\n    duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\n\n    setTimeout(() => {\n      this.validate(index);\n    }, 2000);\n    this.setState({\n      buttonColor: buttonColor,\n      score: score,\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\n    });\n  };\n  validate = (index) => {\n    let {\n      duplicateQuestionAnswer,\n      questionAnswer,\n      openedCards,\n      previouslyOpenedCard,\n      buttonColor,\n      winner,\n      showWinnerText,\n    } = this.state;\n\n    if (openedCards === 1) {\n      openedCards = 0;\n      if (\n        questionAnswer[index].split(\";\")[1] ===\n        questionAnswer[previouslyOpenedCard].split(\";\")[1]\n      ) {\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"success\";\n        winner.push(index);\n        winner.push(previouslyOpenedCard);\n        if (winner.length === questionAnswer.length) {\n          showWinnerText = true;\n        }\n        duplicateQuestionAnswer[index] = questionAnswer[index];\n        duplicateQuestionAnswer[previouslyOpenedCard] =\n          questionAnswer[previouslyOpenedCard];\n      } else {\n        duplicateQuestionAnswer[index] = duplicateQuestionAnswer[\n          previouslyOpenedCard\n        ] = \"Find Match\";\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"info\";\n      }\n    } else {\n      openedCards++;\n      duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\n    }\n\n    this.setState({\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\n      previouslyOpenedCard: index,\n      openedCards: openedCards,\n      showWinnerText: showWinnerText,\n      winner: winner,\n    });\n  };\n  render() {\n    const { score, showWinnerText } = this.state;\n    return (\n      <div>\n        <Header as=\"h2\" color=\"teal\">\n          <Icon name=\"game\" />\n          <Header.Content>Memory Game</Header.Content>\n        </Header>\n        <Message style={{ marginLeft: \"4%\", marginRight: \"14%\" }}>\n          <Label size=\"medium\" color=\"brown\" style={{ marginBottom: \"3%\" }}>\n            Score : {score}\n          </Label>\n\n          <Row>{this.displayMatrix()}</Row>\n          {showWinnerText && (\n            <Row>\n              <Header as=\"h2\" color=\"olive\">\n                <Icon name=\"winner\" />\n                <Header.Content>Congratulations! You Win</Header.Content>\n              </Header>\n            </Row>\n          )}\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default MemoryGame;\n","import React from \"react\";\nimport axios from \"axios\";\nimport AppMenu from \"../common/AppMenu\";\nimport \"../App.css\";\nimport \"./MemoryGame.css\";\nimport { Button, Row, Col, Alert } from \"reactstrap\";\nimport { Card, Header, Icon, Message, Label, Menu } from \"semantic-ui-react\";\n\nclass OddManGame extends React.Component {\n  state = {\n    isLoading: true,\n    questionAnswer: [],\n    hintText: \"Hint\",\n    isCorrect: false,\n    disableAll: false,\n    score: 0,\n    duplicateQuestionAnswer: [],\n    openedCards: 0,\n    previouslyOpenedCard: -1,\n    buttonColor: [],\n    winner: [],\n    showWinnerText: false,\n  };\n  async componentDidMount() {\n    const mapping = await this.initialise();\n    this.OddManGameLogic(mapping.length);\n    this.setState({\n      questionAnswer: mapping,\n      isLoading: false,\n    });\n  }\n  OddManGameLogic = (length) => {\n    const random = this.random(length);\n    this.setState({\n      random: random,\n    });\n  };\n  initialise = () => {\n    let response = [\n      \"Yudhishthira;Bheema;Arjuna;Nakula;Ravana;Yuga;Ravana\",\n      \"Prithvi;Jala;Tejas;Vaayu;Grahana Indriya;5 Tanmaatras;Grahana Indriya\",\n      \"Shantanu;Devaki;Bheeshma;Ganga Devi;Devavrata;Pandu purvaja;Devaki\",\n      \"Krishna;Muchukunda;Kaalyavana;Matsya;Ranachhoda;Bhagawat 10 Skanda;Matsya\",\n      \"Arjuna;Drupada;Draupadi;Matsya-Bheda;Ghatotkacha;Swayamvara;Ghatotkacha\",\n      \"Ghatotkacha;Hidimba;Krishna;Bheema;Hidimbi;After Laakshaa Gruha;Krishna\",\n      \"Virat Raja;Bheeshma-Pratijnya;Bheema as Cook;Bruhannala;Kichaka;Ajnyaat-Vaas;Bheeshma-Pratijnya\",\n      \"Hanumaan;Sita;Chudamani;Kumbhakarna;Ashoka Vaatika;Sundarkaanda;Kumbhakarna\",\n    ];\n    let mapping = [];\n\n    response.map((eachItem, index) => {\n      let question = [];\n      let hint = \"\";\n      let answer = \"\";\n      question.push(eachItem.split(\";\")[0]);\n      question.push(eachItem.split(\";\")[1]);\n      question.push(eachItem.split(\";\")[2]);\n      question.push(eachItem.split(\";\")[3]);\n      question.push(eachItem.split(\";\")[4]);\n      hint = eachItem.split(\";\")[5];\n      answer = eachItem.split(\";\")[6];\n      mapping.push({\n        question: question,\n        hint: hint,\n        answer: answer,\n      });\n    });\n    return mapping;\n  };\n  random = (length) => {\n    return Math.floor(Math.random() * length);\n  };\n  // {this.includeButton(index, question)}\n  displayMatrix = () => {\n    const { questionAnswer, random } = this.state;\n\n    return questionAnswer[random].question.map((question, index) => (\n      <Col xs=\"8\" key={index}>\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\n      </Col>\n    ));\n  };\n  includeButton = (index, question) => {\n    const {\n      questionAnswer,\n      buttonColor,\n      disableAll,\n      isCorrect,\n      random,\n    } = this.state;\n    return (\n      <Button\n        color={\n          isCorrect && questionAnswer[random].answer === question\n            ? \"success\"\n            : disableAll\n            ? \"danger\"\n            : buttonColor[index]\n        }\n        key={index}\n        disabled={disableAll}\n        value={index}\n        onClick={(event) => {\n          event.preventDefault();\n          this.validateAnswer(question);\n        }}\n      >\n        {question}\n      </Button>\n    );\n  };\n\n  validateAnswer = (question) => {\n    let { questionAnswer, random, score } = this.state;\n    const validate = question === questionAnswer[random].answer;\n    score = validate ? ++score : score;\n    this.setState({\n      isCorrect: validate,\n      score: score,\n      disableAll: true,\n    });\n  };\n  changeBtnText = () => {\n    let { random, questionAnswer } = this.state;\n    this.setState({\n      hintText: questionAnswer[random].hint,\n    });\n  };\n\n  showHint = (event) => {\n    const { questionAnswer, hintText } = this.state;\n\n    return (\n      <div className=\"btn-arrange\">\n        <Button\n          color=\"warning\"\n          disabled={hintText !== \"Hint\"}\n          onClick={(event) => {\n            event.preventDefault();\n            this.changeBtnText();\n          }}\n        >\n          {hintText}\n        </Button>\n      </div>\n    );\n  };\n  nextQuestion = () => {\n    const { questionAnswer } = this.state;\n    this.OddManGameLogic(questionAnswer.length);\n    this.displayMatrix();\n    this.setState({\n      isCorrect: false,\n      disableAll: false,\n      hintText: \"Hint\",\n    });\n  };\n  render() {\n    const { score, disableAll, isLoading } = this.state;\n    if (isLoading) {\n      return <div> Loading....</div>;\n    }\n    return (\n      <div>\n        <Header as=\"h2\" color=\"teal\">\n          <Icon name=\"game\" />\n          <Header.Content>Find The Odd Man Out</Header.Content>\n        </Header>\n        <Message style={{ marginLeft: \"4%\", marginRight: \"14%\" }}>\n          <Label size=\"medium\" color=\"brown\" style={{ marginBottom: \"3%\" }}>\n            Score: (No. of right answers): {score}\n          </Label>\n          <Row>{this.displayMatrix()}</Row>\n          <Row>{this.showHint()}</Row>\n          {disableAll && (\n            <Row>\n              <Button color=\"info\" onClick={this.nextQuestion}>\n                Next Question\n              </Button>\n            </Row>\n          )}\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default OddManGame;\n","export const findRandomNumber = (length) => {\n    return Math.floor(Math.random() * length);\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  Icon,\n  Header,\n  Container,\n  Button,\n} from \"semantic-ui-react\";\nimport {findRandomNumber} from '../utils/helper'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nfunction TimerGame() {\n  const [startGame, setStartGame] = useState(false);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [questionToShow, setQuestionToShow] = useState(\"\")\n  const [answer, setAnswer] = useState(\"\")\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [timeOut, setTimeOut] = useState(false)\n  const [key, setKey] = useState(0);\n  \n  useEffect(() => {\n    const questions = [\"Name 5th avataar in Dashaavatara;Vaamana\", \"How many number of Bhakti's are there?; 9\",\n  \"Who is the father of Kaalayavana?;Garga Acharya\",\"Brother of Satrajita Raja?; Prasenajit\",\"Husband of Damyanti?; Nala Raja\",\n\"Husband of Sukanya Devi?;Chyavana Rishi\", \"Who gave curse to Parikshit Raja?; Shrungi\", \"Shrungi's father's name?;Shameeka Rishi\"]\n    setAllQuestions(questions)\n  }, [])\n\n  const handleClick = () => {\n    const randomNo = findRandomNumber(allQuestions.length)\n    setRandomNumber(randomNo)\n    setQuestionToShow(allQuestions[randomNo].split(\";\")[0])\n    setAnswer(allQuestions[randomNo].split(\";\")[1])\n    setStartGame(true)\n    setTimeOut(false)\n    setKey(prevKey => prevKey + 1)\n  };\n\n  return (\n    <React.Fragment>\n      <Header as=\"h2\" color=\"teal\">\n        <Icon name=\"game\" />\n        <Header.Content>Question and Answer</Header.Content>\n      </Header>\n      <Container>\n        {!startGame && <Button primary onClick={handleClick}>Start Game</Button>}\n        \n        {startGame && <React.Fragment>\n          <CountdownCircleTimer\n          onComplete={() => setTimeOut(true)}\n          key={key}\n    isPlaying = {!timeOut}\n    duration={10}\n    size={80}\n    colors={[\n      ['#004777', 0.33],\n      ['#F7B801', 0.33],\n      ['#A30000', 0.33],\n    ]}\n  >\n    {({ remainingTime }) => remainingTime}\n  </CountdownCircleTimer>\n                      <span style={{color:\"red\", fontSize:\"large\"}}>Question: {questionToShow}</span>\n                      {timeOut && <React.Fragment>\n                         <div style={{marginTop:\"3%\",color:\"green\", fontSize:\"large\"}}>Answer: { answer}</div>\n                        <div>\n                        <Button primary style={{marginTop: \"3%\"}} onClick={handleClick}>Next Question</Button></div></React.Fragment>}\n        </React.Fragment>}\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default TimerGame;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  ButtonGroup,\n  Button,\n} from \"reactstrap\";\nimport AppMenu from \"../common/AppMenu\";\nimport MemoryGame from \"./MemoryGame\";\nimport OddManGame from \"./OddManGame\";\nimport TimerGame from \"./TimerGame\";\n\nclass GameMenu extends React.Component {\n  state = {\n    showMemoryGame: false,\n    showOddManGame: false,\n    showTimerGame: false,\n  };\n  render() {\n    let { showMemoryGame, showOddManGame, showTimerGame } = this.state;\n    const me = this;\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <p />\n        <div className=\"app\">\n          <Row>\n            {!showMemoryGame && !showOddManGame && !showTimerGame && (\n              <Col sm={{ size: \"auto\", offset: 1 }}>\n                <ButtonGroup>\n                  <Button href=\"/memory\">Memory Game</Button>\n                  <Button href=\"/oddman\">Odd man Game</Button>\n                  <Button href=\"/timer\">Timer Game</Button>\n                  <Button href=\"/quiz\">Quiz Game</Button>\n                </ButtonGroup>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default GameMenu;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Col,\n  Container,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nimport AppMenu from \"./common/AppMenu\";\n//import { isValidLoginDetails } from \"../common/validate\";\n//import \"./styles.css\";\nclass QuestionSet extends React.Component {\n  state = {\n    faqSection: {},\n    items: {\n      question: \"\",\n      code: \"\",\n      category: [\n        {\n          title: \"\",\n          subCategory: [\n            {\n              itemName: \"\",\n            },\n          ],\n        },\n      ],\n    },\n  };\n  handleChange = (event) => {\n    let { items } = this.state;\n\n    if (event.target.name === \"title\") {\n      items.category[0].title = event.target.value;\n    } else if (event.target.name === \"subCategory\") {\n      items.category[0].subCategory[event.target.id].itemName =\n        event.target.value;\n      items.category[0].subCategory[event.target.id].index = event.target.id;\n    } else {\n      items[event.target.name] = event.target.value;\n    }\n    this.setState({\n      items: items,\n    });\n  };\n  showitemNameTextBoxes = (event) => {\n    let { items } = this.state;\n    return items.category[0].subCategory.map((faq, index) => (\n      <div key={index}>\n        <Input\n          type=\"text\"\n          name=\"subCategory\"\n          id={index}\n          index={index}\n          placeholder=\"Enter Subcategory\"\n          onChange={this.handleChange}\n        />\n      </div>\n    ));\n  };\n  addItem = () => {\n    let { items } = this.state;\n    items.category[0].subCategory.push({ itemName: \"\" });\n    this.setState({\n      items: items,\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { items } = this.state;\n    const me = this;\n    axios({\n      url: \"/faq/saveAnswer/\",\n      method: \"POST\",\n      data: items,\n    })\n      .then((response) => {\n        console.log(\"Data saved\", response.data.error);\n        const showMsg = response.data.error ? \"error\" : \"success\";\n        me.setState({\n          showText: showMsg,\n        });\n      })\n      .catch(() => {\n        console.log(\"Some error occurred\");\n      });\n  };\n  render() {\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <Container>\n          <Row>\n            <Col xs=\"6\">\n              <div className=\"headersection\">\n                <h3>Add new Question Section</h3>\n                <div className=\"mainsection\">\n                  <Form>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"code\"\n                        id=\"code\"\n                        placeholder=\"Enter Section Code (eg: avatars)\"\n                        onChange={this.handleChange}\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"categoryTitle\"\n                        placeholder=\"Enter Category Title (eg: Mahabharata)\"\n                        onChange={this.handleChange}\n                      />\n                    </FormGroup>\n                    <FormGroup></FormGroup>\n                    <FormGroup>{this.showitemNameTextBoxes()}</FormGroup>\n                    <FormGroup>\n                      <Button onClick={this.addItem}>\n                        Add another subCategory\n                      </Button>\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Button onClick={this.handleSubmit}>Submit</Button>\n                    </FormGroup>\n                  </Form>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default QuestionSet;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Col,\n  Container,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport AppMenu from \"./common/AppMenu\";\n//import { isValidLoginDetails } from \"../common/validate\";\n//import \"./styles.css\";\nclass OtherPage extends React.Component {\n  state = {\n    question: [],\n    input: [],\n    mapping: [],\n    inputRequest: {\n      code: \"\",\n      input: [],\n    },\n  };\n  handleSubmit = (event) => {\n    let { selectedGame, input, mapping, inputRequest } = this.state;\n    event.preventDefault();\n    if (selectedGame === \"oddManOut\") {\n      mapping = input.join(\";\");\n    } else {\n      mapping[0] = input.slice(0, 3).join(\";\");\n      mapping[1] = input.slice(3, 6).join(\";\");\n      mapping[2] = input.slice(6, 9).join(\";\");\n      mapping[3] = input.slice(9, 12).join(\";\");\n      mapping[4] = input.slice(12, 15).join(\";\");\n    }\n    inputRequest.input.push(mapping);\n    inputRequest.code = selectedGame;\n    this.submitForm(inputRequest);\n  };\n  submitForm = (inputRequest) => {\n    const me = this;\n    axios({\n      url: \"/memory/saveGameQuestion/\",\n      method: \"POST\",\n      data: inputRequest,\n    })\n      .then((response) => {\n        console.log(\"Data saved\", response.data.error);\n        const showMsg = response.data.error ? \"error\" : \"success\";\n        me.setState({\n          showText: showMsg,\n        });\n      })\n      .catch(() => {\n        console.log(\"Some error occurred\");\n      });\n  };\n  addOddManForm = () => {\n    var indents = [];\n    for (var index = 0; index < 7; index++) {\n      indents.push(\n        <Row>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={index}\n                name={index}\n                placeholder=\"Enter the question\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n        </Row>\n      );\n    }\n    return indents;\n  };\n  addMemoryForm = () => {\n    var indents = [];\n    var columnNo = -2;\n    for (var index = 0; index < 5; index++) {\n      columnNo = columnNo + 2;\n      indents.push(\n        <Row>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={columnNo + index}\n                name={index}\n                placeholder=\"Enter the question\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={columnNo + index + 1}\n                name={index}\n                placeholder=\"Enter the question\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n          <Col md={4}>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                id={columnNo + index + 2}\n                name={index}\n                placeholder=\"Enter the answer\"\n                onBlur={this.handleChange}\n              />{\" \"}\n            </FormGroup>\n          </Col>\n        </Row>\n      );\n    }\n    return indents;\n  };\n  handleChange = (event) => {\n    let { input } = this.state;\n    input[event.target.id] = event.target.value;\n    console.log(input);\n    this.setState({\n      input: input,\n    });\n  };\n  selectGame = (event) => {\n    this.setState({\n      selectedGame: event.target.value,\n    });\n  };\n  render() {\n    const { selectedGame } = this.state;\n    return (\n      <div>\n        <AppMenu></AppMenu>\n        <Container>\n          <Row>\n            <Col xs=\"6\">\n              <div className=\"headersection\">\n                <h3>Add new Question Section</h3>\n                <div className=\"mainsection\">\n                  <Form>\n                    <FormGroup check>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name=\"radio2\"\n                          value=\"memory\"\n                          onClick={this.selectGame}\n                        />{\" \"}\n                        Memory Game\n                      </Label>\n                    </FormGroup>\n                    <FormGroup check>\n                      <Label check>\n                        <Input\n                          type=\"radio\"\n                          name=\"radio2\"\n                          value=\"oddManOut\"\n                          onClick={this.selectGame}\n                        />{\" \"}\n                        Odd Man Out\n                      </Label>\n                    </FormGroup>\n\n                    {selectedGame === \"memory\" && this.addMemoryForm()}\n                    {selectedGame === \"oddManOut\" && this.addOddManForm()}\n                    <FormGroup>\n                      <Button onClick={this.handleSubmit}>Submit</Button>\n                    </FormGroup>\n                  </Form>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default OtherPage;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Container, Button } from \"reactstrap\";\nimport AppMenu from \"../common/AppMenu\";\nconst QuizGame = () => {\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"Choose wisely\");\n  const handleRadioChange = (event) => {\n    setValue(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (value === \"best\") {\n      setHelperText(\"You got it!\");\n      setError(false);\n    } else if (value === \"worst\") {\n      setHelperText(\"Sorry, wrong answer!\");\n      setError(true);\n    } else {\n      setHelperText(\"Please select an option.\");\n      setError(true);\n    }\n  };\n\n  return (\n    <div>\n      <AppMenu></AppMenu>\n      <Container>\n        <h3 className=\"header\"> Pop quiz</h3>\n        <div className=\"arrangeButtons\">\n          <form onSubmit={handleSubmit}>\n            <FormControl component=\"fieldset\" error={error}>\n              <FormLabel component=\"legend\"></FormLabel>\n              <RadioGroup\n                aria-label=\"quiz\"\n                name=\"quiz\"\n                value={value}\n                onChange={handleRadioChange}\n              >\n                <FormControlLabel\n                  value=\"best\"\n                  control={<Radio />}\n                  label=\"The best!\"\n                />\n                <FormControlLabel\n                  value=\"worst\"\n                  control={<Radio />}\n                  label=\"The worst.\"\n                />\n              </RadioGroup>\n              <FormHelperText>{helperText}</FormHelperText>\n              <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n                Check Answer\n              </Button>\n            </FormControl>\n          </form>\n          >\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default QuizGame;\n","import React from \"react\";\nimport { Message, List } from \"semantic-ui-react\";\nconst ShowContent = (props) => {\n  return (\n    <Message>\n      <List animated size=\"big\">\n        {props.contenInfo.map(({ itemName }) => (\n          <List.Item>\n            <List.Content>\n              <List.Header>{itemName}</List.Header>\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    </Message>\n  );\n};\n\nexport default ShowContent;\n","import React, { useState } from \"react\";\nimport { Accordion, Menu, Input, Header, Icon } from \"semantic-ui-react\";\nimport ShowContent from \"./ShowContent\";\n\nconst DetailedPage = (props) => {\n  const [activeItem, setActiveItem] = useState(\n    props.detailedOutput[0].category[0].title\n  );\n  const [showContent, setShowContent] = useState(false);\n  const [contenInfo, setContentInfo] = useState(\n    props.detailedOutput[0].category[0].subCategory\n  );\n  return (\n    <React.Fragment>\n      <Header as=\"h2\" color=\"teal\">\n        <Icon name=\"list\" />\n        <Header.Content>{props.userSelectedHeader}</Header.Content>\n      </Header>\n      <Menu pointing>\n        {props.detailedOutput[0].category.map(({ title }, index) => (\n          <Menu.Item\n            name={title}\n            active={activeItem === title}\n            onClick={() => {\n              setShowContent(true);\n              setActiveItem(title);\n              setContentInfo(\n                props.detailedOutput[0].category[index].subCategory\n              );\n            }}\n          />\n        ))}\n      </Menu>\n      {showContent && <ShowContent contenInfo={contenInfo} />}\n    </React.Fragment>\n  );\n};\n\nexport default DetailedPage;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Icon,\n  Header,\n  Container,\n  Button,\n} from \"semantic-ui-react\";\nimport {findRandomNumber} from '../utils/helper'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\n\nconst WSTH = () => {\n\nconst [startGame, setStartGame] = useState(false);\nconst [allQuestions, setAllQuestions] = useState([]);\nconst [questionToShow, setQuestionToShow] = useState(\"\")\nconst [answer, setAnswer] = useState(\"\")\nconst [randomNumber, setRandomNumber] = useState(0);\nconst [timeOut, setTimeOut] = useState(false)\nconst [key, setKey] = useState(0);\n    useEffect(() => {\n        const allQuestions = [\"Yontah Pravishya MamaVaacha...; Prahlad to Vishnu\",\"Yato Dharmah tato jaya; Gaandhari to Duryodhana\",\n    \"Ashwathama Hatah.. Naro va Kunjaro va; Yudhishtra to Dronacharya\", \"Shravanam Kirtam Vishnum...; Prahlaad to Hirankyakshipu\",\n    \"Bheeemacha Balabhadracha Madra-rajacha Veeryavaan...; Duryodhan to All\", \"Jaanami Dharma na cha may pravrutti...; Duryodhan to Gandhari\",\n    \"Kim Pashu Purva dehe; Akshobhay teertha to Dhondopant Deshpande (Jayateertha)\", \"Viraat nagam ramyam, gacha maano;Yudhisthira praying to Duraga devi\"]\n    setAllQuestions(allQuestions)\n    },[])\n    const handleClick = () => {\n        const randomNo = findRandomNumber(allQuestions.length)\n        setRandomNumber(randomNo)\n        setQuestionToShow(allQuestions[randomNo].split(\";\")[0])\n        setAnswer(allQuestions[randomNo].split(\";\")[1])\n        setStartGame(true)\n        setTimeOut(false)\n        setKey(prevKey => prevKey + 1)\n      };\n    \n      return (\n        <React.Fragment>\n          <Header as=\"h2\" color=\"teal\">\n            <Icon name=\"game\" />\n            <Header.Content>Who Said To Home</Header.Content>\n          </Header>\n          <Container>\n            {!startGame && <Button primary onClick={handleClick}>Start Game</Button>}\n            \n            {startGame && <React.Fragment>\n              <CountdownCircleTimer\n              onComplete={() => setTimeOut(true)}\n              key={key}\n        isPlaying = {!timeOut}\n        duration={10}\n        size={80}\n        colors={[\n          ['#004777', 0.33],\n          ['#F7B801', 0.33],\n          ['#A30000', 0.33],\n        ]}\n      >\n        {({ remainingTime }) => remainingTime}\n      </CountdownCircleTimer>\n                          <span style={{color:\"red\", fontSize:\"large\"}}>Question: {questionToShow}</span>\n                          {timeOut && <React.Fragment>\n                             <div style={{marginTop:\"3%\",color:\"green\", fontSize:\"large\"}}>Answer: { answer}</div>\n                            <div>\n                            <Button primary style={{marginTop: \"3%\"}} onClick={handleClick}>Next Question</Button></div></React.Fragment>}\n            </React.Fragment>}\n          </Container>\n        </React.Fragment>\n      );\n}\n\nexport default WSTH;","import React from \"react\";\nimport { Button, Card, Icon, Image } from \"semantic-ui-react\";\nimport binoculars from \"../images/binoculars.svg\";\nimport wsth from \"../images/wsth.svg\";\nimport memory from \"../images/memory.svg\";\nimport timer from \"../images/timer.svg\";\nconst MainPageContent = (props) => (\n    <>\n  <Card.Group itemsPerRow={2}>\n    <Card>\n      <Card.Content>\n      <Image src={memory} size=\"mini\" />\n        <Card.Header>Memory Game</Card.Header>\n        <Card.Meta>Learn and Play!</Card.Meta>\n        <Card.Description>\n          Open anyone of the closed cards and it will reveal a question. Match the corresponding correct\n          card.\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n      <div className=\"ui two buttons\">\n          <Button fluid basic color=\"green\" onClick={()=> props.setUserSelectedHeader(\"memory\")}>\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n      <Image src={binoculars} size=\"mini\" />\n        <Card.Header>Find the Odd Man Out</Card.Header>\n        <Card.Meta>Know your history!</Card.Meta>\n        <Card.Description>\n          You will shown with question with some options. Identify the out-of-the-context option.\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button fluid basic color=\"green\" onClick={()=> props.setUserSelectedHeader(\"oddMan\")}>\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n      <Image src={timer} size=\"mini\" />\n        <Card.Header>Simple Timer Game</Card.Header>\n        <Card.Meta>You have only 10 seconds!</Card.Meta>\n        <Card.Description>\n          You will be given 10 seconds to answer the question. Are you ready for this challenge?!\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button basic color=\"green\" onClick={()=> props.setUserSelectedHeader(\"qna\")}>\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    <Card>\n      <Card.Content>\n      <Image src={wsth} size=\"mini\" />\n        <Card.Header>Who said to whom</Card.Header>\n        <Card.Meta>Do you know these famous lines?!</Card.Meta>\n        <Card.Description>\n          Do you remember these statements. Up for this?!\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button basic color=\"green\" onClick={()=> props.setUserSelectedHeader(\"wsth\")}>\n            Play\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  </Card.Group>\n  </>\n);\n\nexport default MainPageContent;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Dropdown,\n  Menu,\n  Segment,\n  Dimmer,\n  Loader,\n  Image,\n  Message,\n} from \"semantic-ui-react\";\nimport DetailedPage from \"./DetailedPage\";\nimport src from \"../images/logo.svg\";\nimport Memory from \"../Game/Memory\";\nimport MemoryGame from \"../games/MemoryGame\";\nimport OddManGame from \"../games/OddManGame\";\nimport TimerGame from \"../games/TimerGame\";\nimport WSTH from \"../games/WSTH\";\nimport MainPageContent from \"./MainPageContent\";\nconst MenuPage = () => {\n  const [menuItems, setMenuItems] = useState([]);\n  const [showInfoOutput, setShowInfoOutput] = useState(false);\n  const [showGameOutput, setShowGameOutput] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [userSelection, setUserSelection] = useState(\"\");\n  const [userSelectedHeader, setUserSelectedHeader] = useState(\"\");\n  const [detailedOutput, setDetailedOutput] = useState({});\n  useEffect(() => {\n    getMenuItems();\n  }, [userSelection]);\n\n  const getMenuItems = async () => {\n    if (userSelection === \"\") {\n      const response = await fetch(\"/api/faqQuestionList\");\n      const body = await response.json();\n\n      setMenuItems(body);\n    } else {\n      const response = await fetch(\n        \"/api/faqSpecificAnswer?code=\" + userSelection\n      );\n      const body = await response.json();\n      setShowLoader(false);\n      setDetailedOutput(body);\n      setShowInfoOutput(true);\n      setShowGameOutput(false);\n    }\n  };\n  const handleClick = (event, data) => {\n    setShowLoader(true);\n    setUserSelection(data.name);\n    setUserSelectedHeader(data.children);\n  };\n  const handleGames = (event, data) => {\n    setUserSelectedHeader(data.name);\n    console.log(data);\n    setShowInfoOutput(false);\n    setShowGameOutput(true);\n  };\n  return (\n    <React.Fragment>\n      <Menu inverted color=\"blue\" size=\"large\">\n        <Menu.Item>\n          <Image src={src} size=\"mini\" />\n        </Menu.Item>\n        <Dropdown text=\"Categories\" pointing className=\"link item\">\n          <Dropdown.Menu>\n            {menuItems.map(({ question, code }) => (\n              <Dropdown.Item name={code} onClick={handleClick}>\n                {question}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown text=\"Games\" pointing className=\"link item\">\n          <Dropdown.Menu>\n            <Dropdown.Item name=\"memory\" onClick={handleGames}>\n              Memory Game\n            </Dropdown.Item>\n            <Dropdown.Item name=\"oddMan\" onClick={handleGames}>\n              Find the odd man out\n            </Dropdown.Item>\n            <Dropdown.Item name=\"qna\" onClick={handleGames}>\n              Question and Answer\n            </Dropdown.Item>\n            <Dropdown.Item name=\"wsth\" onClick={handleGames}>\n              WSTH\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu>\n      {showInfoOutput && (\n        <DetailedPage\n          userSelectedHeader={userSelectedHeader}\n          detailedOutput={detailedOutput}\n        />\n      )}\n      {showLoader && (\n        <Segment>\n          <Dimmer active inverted>\n            <Loader size=\"large\">Loading</Loader>\n          </Dimmer>\n        </Segment>\n      )}\n      {userSelectedHeader === \"memory\" && (\n        <MemoryGame userSelectedHeader={userSelectedHeader} />\n      )}\n      {userSelectedHeader === \"oddMan\" && (\n        <OddManGame userSelectedHeader={userSelectedHeader} />\n      )}\n      {userSelectedHeader === \"qna\" && (\n        <TimerGame userSelectedHeader={userSelectedHeader} />\n      )}\n      {userSelectedHeader === \"wsth\" && (\n        <WSTH userSelectedHeader={userSelectedHeader} />\n      )}\n\n      {userSelectedHeader === \"\" && <Message>\n        <MainPageContent setUserSelectedHeader={setUserSelectedHeader} />\n      </Message>}\n    </React.Fragment>\n  );\n};\nexport default MenuPage;\n","import React from \"react\";\nimport HomePage from \"./landing/HomePage\";\nimport DetailedPage from \"./landing/DetailedPage\";\nimport GameMenu from \"./games/GameMenu\";\nimport QuestionSet from \"./QuestionSet\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport OtherPage from \"./OtherPage\";\nimport MemoryGame from \"./games/MemoryGame\";\nimport OddManGame from \"./games/OddManGame\";\nimport TimerGame from \"./games/TimerGame\";\nimport QuizGame from \"./games/QuizGame\";\nimport MenuPage from \"./Main/Menu\";\nimport \"semantic-ui-css/semantic.min.css\";\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true} component={MenuPage} />\n            <Route path=\"/detail\" exact={true} component={DetailedPage} />\n            <Route path=\"/games\" exact={true} component={GameMenu} />\n            <Route path=\"/addGameQuestion\" exact={true} component={OtherPage} />\n            <Route path=\"/others\" exact={true} component={QuestionSet} />\n            <Route path=\"/memory\" exact={true} component={MemoryGame} />\n            <Route path=\"/oddman\" exact={true} component={OddManGame} />\n            <Route path=\"/timer\" exact={true} component={TimerGame} />\n            <Route path=\"/quiz\" exact={true} component={QuizGame} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}