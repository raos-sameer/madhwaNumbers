{"version":3,"sources":["images/logo.svg","images/binoculars.svg","images/wsth.svg","images/memory.svg","images/timer.svg","landing/DetailedPage.js","common/AppMenu.js","landing/HomePage.js","Main/ShowContent.js","Main/DetailedPage.js","games/GameMenu.js","QuestionSet.js","OtherPage.js","Main/MainPageContent.js","Main/Menu.js","games/MemoryGame.js","games/OddManGame.js","utils/helper.js","games/TimerGame.js","games/WSTH.js","App.js","serviceWorker.js","reducers/category.js","index.js"],"names":["module","exports","DetailedPage","props","state","showAnswerDetails","subCategory","handleClick","category","document","getElementById","hidden","innerHTML","title","map","eachSubCategory","itemName","join","className","Row","Col","sm","size","offset","ListGroup","displayList","showDetails","showAnswer","index","href","key","value","onClick","event","preventDefault","Container","id","AppMenu","useState","menuItems","setMenuItems","dispatch","useDispatch","categories","useSelector","shallowEqual","useEffect","getMenuItems","a","Object","keys","length","fetch","response","json","body","type","payload","Menu","inverted","color","Item","Image","src","Dropdown","text","pointing","question","code","as","name","React","Component","ShowContent","Message","Table","Header","HeaderCell","Body","contentInfo","Cell","detailedOutput","setDetailedOutput","showContent","setShowContent","setContentInfo","header","setHeader","search","useLocation","values","queryString","parse","console","log","Fragment","Icon","Content","GameMenu","showMemoryGame","showOddManGame","showTimerGame","this","ButtonGroup","Button","QuestionSet","faqSection","items","handleChange","target","setState","showitemNameTextBoxes","faq","Input","placeholder","onChange","addItem","push","handleSubmit","me","axios","url","method","data","then","error","showMsg","showText","catch","xs","Form","FormGroup","OtherPage","input","mapping","inputRequest","selectedGame","slice","submitForm","addOddManForm","indents","md","onBlur","addMemoryForm","columnNo","selectGame","check","Label","MainPageContent","Card","Group","itemsPerRow","memory","Meta","Description","extra","fluid","basic","binoculars","timer","wsth","MenuPage","showcategoryInfo","setShowCategoryInfo","MemoryGame","questionAnswer","duplicateQuestionAnswer","openedCards","score","previouslyOpenedCard","buttonColor","winner","showWinnerText","initialise","eachItem","answer","split","componentDidMount","clues","eachClue","random","nums","ranNums","i","j","Math","floor","splice","displayMatrix","includeButton","disabled","changeBtnText","setTimeout","validate","style","marginLeft","marginRight","marginBottom","OddManGame","isLoading","hintText","isCorrect","disableAll","OddManGameLogic","hint","validateAnswer","showHint","nextQuestion","findRandomNumber","TimerGame","startGame","setStartGame","allQuestions","setAllQuestions","questionToShow","setQuestionToShow","setAnswer","setRandomNumber","timeOut","setTimeOut","setKey","randomNo","prevKey","primary","onComplete","isPlaying","duration","colors","remainingTime","fontSize","marginTop","WSTH","App","path","exact","component","Boolean","window","location","hostname","match","categoryDetail","details","categryReducer","action","loggedInUser","store","createStore","categoryReducer","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c893b681.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.74c96e60.svg\";","module.exports = __webpack_public_path__ + \"static/media/binoculars.c7dc475f.svg\";","module.exports = __webpack_public_path__ + \"static/media/wsth.9506b2c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/memory.ea92cb65.svg\";","module.exports = __webpack_public_path__ + \"static/media/timer.24fba1ef.svg\";","import React from \"react\";\r\nimport { ListGroup, Row, Col, Container } from \"reactstrap\";\r\nimport \"../App.css\";\r\nconst DetailedPage = (props) => {\r\n  const state = {\r\n    showAnswerDetails: true,\r\n    subCategory: [],\r\n  };\r\n  const showAnswer = () => {\r\n    const answer = props.showAnswer;\r\n    return answer.map((category, index) => (\r\n      <a\r\n        href=\"\"\r\n        key={index}\r\n        value={category.title}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          handleClick(category);\r\n        }}\r\n      >\r\n        {category.title}\r\n      </a>\r\n    ));\r\n  };\r\n  const handleClick = (category) => {\r\n    state.showAnswerDetails = false;\r\n    document.getElementById(\"DetailedAnswer\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").innerHTML =\r\n      \"<h3>\" + category.title + \"</h3>\";\r\n    document.getElementById(\r\n      \"DetailedAnswer\"\r\n    ).innerHTML = category.subCategory\r\n      .map((eachSubCategory) => \"<h5>\" + eachSubCategory.itemName + \"</h5>\")\r\n      .join(\"\");\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <Row>\r\n        <Col sm={{ size: \"auto\", offset: 1 }}>\r\n          <ListGroup>{props.displayList}</ListGroup>\r\n        </Col>\r\n        <div className=\"scrollmenu\">{props.showDetails && showAnswer()}</div>\r\n        <Container>\r\n          <div\r\n            id=\"DetailedAnswerTitle\"\r\n            className=\"detailedTitle\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n\r\n          <div\r\n            id=\"DetailedAnswer\"\r\n            className=\"detailed\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n        </Container>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Dropdown, Menu, Image } from \"semantic-ui-react\";\r\nimport src from \"../images/logo.svg\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nconst AppMenu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector((state) => state.categories, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    getMenuItems();\r\n  }, []);\r\n  const getMenuItems = async () => {\r\n    if (Object.keys(categories).length === 0) {\r\n      const response = await fetch(\"/api/faqQuestionList\");\r\n      const body = await response.json();\r\n      dispatch({ type: \"CATEGORY_LIST\", payload: body });\r\n      setMenuItems(body);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Menu inverted color=\"blue\" size=\"large\">\r\n        <Menu.Item>\r\n          <Image src={src} size=\"mini\" />\r\n        </Menu.Item>\r\n        <Dropdown text=\"Categories\" pointing className=\"link item\">\r\n          <Dropdown.Menu>\r\n            {menuItems.map(({ question, code }) => (\r\n              <Dropdown.Item as=\"a\" href={\"/detailed?code=\" + code}>\r\n                {question}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Dropdown text=\"Games\" pointing className=\"link item\">\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item as=\"a\" href=\"/memory\" name=\"memory\">\r\n              Memory Game\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as=\"a\" href=\"/oddMan\" name=\"oddMan\">\r\n              Find the odd man out\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as=\"a\" href=\"/qna\" name=\"qna\">\r\n              Question and Answer\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as=\"a\" href=\"/wsth\" name=\"wsth\">\r\n              WSTH\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppMenu;\r\n","import React from \"react\";\r\nimport { ListGroupItem } from \"reactstrap\";\r\nimport DetailedPage from \"./DetailedPage\";\r\nimport \"../App.css\";\r\n\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    questionList: [],\r\n    answer: [],\r\n    isLoading: true,\r\n    showDetails: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.getQuestionList();\r\n  };\r\n\r\n  async getQuestionList() {\r\n    const response = await fetch(\"/api/faqQuestionList\");\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  displayList = (questionList) => {\r\n    if (questionList.length < 1) return null;\r\n\r\n    return questionList.map((faq, index) => (\r\n      <div key={index} className=\"faq_blocks\">\r\n        <ListGroupItem\r\n          key={index}\r\n          data-id={faq.code}\r\n          color=\"success\"\r\n          tag=\"a\"\r\n          href=\"\"\r\n          onClick={this.showDetails.bind(this)}\r\n        >\r\n          {faq.question}\r\n        </ListGroupItem>\r\n      </div>\r\n    ));\r\n  };\r\n  showDetails = (event) => {\r\n    event.preventDefault();\r\n    const code = event.currentTarget.dataset.id;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.getAnswer(code);\r\n  };\r\n  async getAnswer(code) {\r\n    const response = await fetch(\"/api/faqSpecificAnswer?code=\" + code);\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n      showDetails: true,\r\n      answer: body[0] && body[0].category,\r\n    });\r\n\r\n    //this.showAnswer();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, questionList, showDetails, answer } = this.state;\r\n    if (isLoading) {\r\n      return <div> Loading....</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <div>Sameer</div>\r\n        <DetailedPage\r\n          displayList={this.displayList(questionList)}\r\n          showDetails={showDetails}\r\n          showAnswer={answer}\r\n          questionList={questionList}\r\n          showAnswerDetails={false}\r\n        ></DetailedPage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Message, List, Table } from \"semantic-ui-react\";\r\nconst ShowContent = (props) => {\r\n  return (\r\n    <Message>\r\n      <Table>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {props.contentInfo.map(({ itemName }) => (\r\n            <Table.Row key={itemName}>\r\n              <Table.Cell>{itemName}</Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default ShowContent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Accordion, Menu, Input, Header, Icon } from \"semantic-ui-react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport ShowContent from \"./ShowContent\";\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nconst DetailedPage = (props) => {\r\n  const [detailedOutput, setDetailedOutput] = useState({});\r\n  const [showContent, setShowContent] = useState(false);\r\n  const [contentInfo, setContentInfo] = useState(\"\");\r\n  const [header, setHeader] = useState(\"\");\r\n  const { search } = useLocation();\r\n  const values = queryString.parse(search);\r\n  console.log(values.code); // \"top\"\r\n  useEffect(async () => {\r\n    const response = await fetch(\"/api/faqSpecificAnswer?code=\" + values.code);\r\n    const body = await response.json();\r\n    console.log(body[0]);\r\n    setHeader(body[0].question);\r\n    setDetailedOutput(body[0].category);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <AppMenu />\r\n      <Header as=\"h2\" color=\"teal\">\r\n        <Icon name=\"list\" />\r\n        <Header.Content>{header}</Header.Content>\r\n      </Header>\r\n      <Menu pointing>\r\n        {detailedOutput.length > 0 &&\r\n          detailedOutput.map(({ title }, index) => (\r\n            <Menu.Item\r\n              name={title}\r\n              //active={activeItem === title}\r\n              onClick={() => {\r\n                setShowContent(true);\r\n                //setActiveItem(title);\r\n                setContentInfo(detailedOutput[index].subCategory);\r\n              }}\r\n            />\r\n          ))}\r\n      </Menu>\r\n      {showContent && <ShowContent contentInfo={contentInfo} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailedPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport { Row, Col, ButtonGroup, Button } from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass GameMenu extends React.Component {\r\n  state = {\r\n    showMemoryGame: false,\r\n    showOddManGame: false,\r\n    showTimerGame: false,\r\n  };\r\n  render() {\r\n    let { showMemoryGame, showOddManGame, showTimerGame } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <div className=\"app\">\r\n          <Row>\r\n            {!showMemoryGame && !showOddManGame && !showTimerGame && (\r\n              <Col sm={{ size: \"auto\", offset: 1 }}>\r\n                <ButtonGroup>\r\n                  <Button href=\"/memory\">Memory Game</Button>\r\n                  <Button href=\"/oddman\">Odd man Game</Button>\r\n                  <Button href=\"/timer\">Timer Game</Button>\r\n                  <Button href=\"/quiz\">Quiz Game</Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GameMenu;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"./common/AppMenu\";\r\n//import { isValidLoginDetails } from \"../common/validate\";\r\n//import \"./styles.css\";\r\nclass QuestionSet extends React.Component {\r\n  state = {\r\n    faqSection: {},\r\n    items: {\r\n      question: \"\",\r\n      code: \"\",\r\n      category: [\r\n        {\r\n          title: \"\",\r\n          subCategory: [\r\n            {\r\n              itemName: \"\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  handleChange = (event) => {\r\n    let { items } = this.state;\r\n\r\n    if (event.target.name === \"title\") {\r\n      items.category[0].title = event.target.value;\r\n    } else if (event.target.name === \"subCategory\") {\r\n      items.category[0].subCategory[event.target.id].itemName =\r\n        event.target.value;\r\n      items.category[0].subCategory[event.target.id].index = event.target.id;\r\n    } else {\r\n      items[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  showitemNameTextBoxes = (event) => {\r\n    let { items } = this.state;\r\n    return items.category[0].subCategory.map((faq, index) => (\r\n      <div key={index}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"subCategory\"\r\n          id={index}\r\n          index={index}\r\n          placeholder=\"Enter Subcategory\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n  addItem = () => {\r\n    let { items } = this.state;\r\n    items.category[0].subCategory.push({ itemName: \"\" });\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { items } = this.state;\r\n    const me = this;\r\n    axios({\r\n      url: \"/faq/saveAnswer/\",\r\n      method: \"POST\",\r\n      data: items,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data saved\", response.data.error);\r\n        const showMsg = response.data.error ? \"error\" : \"success\";\r\n        me.setState({\r\n          showText: showMsg,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Some error occurred\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Add new Question Section</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        id=\"code\"\r\n                        placeholder=\"Enter Section Code (eg: avatars)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"categoryTitle\"\r\n                        placeholder=\"Enter Category Title (eg: Mahabharata)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup></FormGroup>\r\n                    <FormGroup>{this.showitemNameTextBoxes()}</FormGroup>\r\n                    <FormGroup>\r\n                      <Button onClick={this.addItem}>\r\n                        Add another subCategory\r\n                      </Button>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionSet;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"./common/AppMenu\";\r\n//import { isValidLoginDetails } from \"../common/validate\";\r\n//import \"./styles.css\";\r\nclass OtherPage extends React.Component {\r\n  state = {\r\n    question: [],\r\n    input: [],\r\n    mapping: [],\r\n    inputRequest: {\r\n      code: \"\",\r\n      input: [],\r\n    },\r\n  };\r\n  handleSubmit = (event) => {\r\n    let { selectedGame, input, mapping, inputRequest } = this.state;\r\n    event.preventDefault();\r\n    if (selectedGame === \"oddManOut\") {\r\n      mapping = input.join(\";\");\r\n    } else {\r\n      mapping[0] = input.slice(0, 3).join(\";\");\r\n      mapping[1] = input.slice(3, 6).join(\";\");\r\n      mapping[2] = input.slice(6, 9).join(\";\");\r\n      mapping[3] = input.slice(9, 12).join(\";\");\r\n      mapping[4] = input.slice(12, 15).join(\";\");\r\n    }\r\n    inputRequest.input.push(mapping);\r\n    inputRequest.code = selectedGame;\r\n    this.submitForm(inputRequest);\r\n  };\r\n  submitForm = (inputRequest) => {\r\n    const me = this;\r\n    axios({\r\n      url: \"/memory/saveGameQuestion/\",\r\n      method: \"POST\",\r\n      data: inputRequest,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data saved\", response.data.error);\r\n        const showMsg = response.data.error ? \"error\" : \"success\";\r\n        me.setState({\r\n          showText: showMsg,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Some error occurred\");\r\n      });\r\n  };\r\n  addOddManForm = () => {\r\n    var indents = [];\r\n    for (var index = 0; index < 7; index++) {\r\n      indents.push(\r\n        <Row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={index}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    return indents;\r\n  };\r\n  addMemoryForm = () => {\r\n    var indents = [];\r\n    var columnNo = -2;\r\n    for (var index = 0; index < 5; index++) {\r\n      columnNo = columnNo + 2;\r\n      indents.push(\r\n        <Row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index + 1}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index + 2}\r\n                name={index}\r\n                placeholder=\"Enter the answer\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    return indents;\r\n  };\r\n  handleChange = (event) => {\r\n    let { input } = this.state;\r\n    input[event.target.id] = event.target.value;\r\n    console.log(input);\r\n    this.setState({\r\n      input: input,\r\n    });\r\n  };\r\n  selectGame = (event) => {\r\n    this.setState({\r\n      selectedGame: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { selectedGame } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Add new Question Section</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"radio2\"\r\n                          value=\"memory\"\r\n                          onClick={this.selectGame}\r\n                        />{\" \"}\r\n                        Memory Game\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"radio2\"\r\n                          value=\"oddManOut\"\r\n                          onClick={this.selectGame}\r\n                        />{\" \"}\r\n                        Odd Man Out\r\n                      </Label>\r\n                    </FormGroup>\r\n\r\n                    {selectedGame === \"memory\" && this.addMemoryForm()}\r\n                    {selectedGame === \"oddManOut\" && this.addOddManForm()}\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherPage;\r\n","import React from \"react\";\r\nimport { Button, Card, Icon, Image } from \"semantic-ui-react\";\r\nimport binoculars from \"../images/binoculars.svg\";\r\nimport wsth from \"../images/wsth.svg\";\r\nimport memory from \"../images/memory.svg\";\r\nimport timer from \"../images/timer.svg\";\r\nconst MainPageContent = () => (\r\n  <>\r\n    <Card.Group itemsPerRow={2}>\r\n      <Card>\r\n        <Card.Content>\r\n          <Image src={memory} size=\"mini\" />\r\n          <Card.Header>Memory Game</Card.Header>\r\n          <Card.Meta>Learn and Play!</Card.Meta>\r\n          <Card.Description>\r\n            Open anyone of the closed cards and it will reveal a question. Match\r\n            the corresponding correct card.\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <div className=\"ui two buttons\">\r\n            <Button as=\"a\" href=\"/memory\" fluid basic color=\"green\">\r\n              Play\r\n            </Button>\r\n          </div>\r\n        </Card.Content>\r\n      </Card>\r\n      <Card>\r\n        <Card.Content>\r\n          <Image src={binoculars} size=\"mini\" />\r\n          <Card.Header>Find the Odd Man Out</Card.Header>\r\n          <Card.Meta>Know your history!</Card.Meta>\r\n          <Card.Description>\r\n            You will shown with question with some options. Identify the\r\n            out-of-the-context option.\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <div className=\"ui two buttons\">\r\n            <Button as=\"a\" href=\"/oddMan\" fluid basic color=\"green\">\r\n              Play\r\n            </Button>\r\n          </div>\r\n        </Card.Content>\r\n      </Card>\r\n      <Card>\r\n        <Card.Content>\r\n          <Image src={timer} size=\"mini\" />\r\n          <Card.Header>Simple Timer Game</Card.Header>\r\n          <Card.Meta>You have only 10 seconds!</Card.Meta>\r\n          <Card.Description>\r\n            You will have 10 seconds to answer. Ready for this challenge?\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <div className=\"ui two buttons\">\r\n            <Button as=\"a\" href=\"/qna\" basic color=\"green\">\r\n              Play\r\n            </Button>\r\n          </div>\r\n        </Card.Content>\r\n      </Card>\r\n      <Card>\r\n        <Card.Content>\r\n          <Image src={wsth} size=\"mini\" />\r\n          <Card.Header>Who said to whom</Card.Header>\r\n          <Card.Meta>Do you know these famous lines?!</Card.Meta>\r\n          <Card.Description>\r\n            Do you remember these statements. Up for this?!\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <div className=\"ui two buttons\">\r\n            <Button as=\"a\" href=\"/wsth\" basic color=\"green\">\r\n              Play\r\n            </Button>\r\n          </div>\r\n        </Card.Content>\r\n      </Card>\r\n    </Card.Group>\r\n  </>\r\n);\r\n\r\nexport default MainPageContent;\r\n","import React, { useState } from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport DetailedPage from \"./DetailedPage\";\r\nimport MainPageContent from \"./MainPageContent\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nconst MenuPage = () => {\r\n  const [showcategoryInfo, setShowCategoryInfo] = useState(true);\r\n  const [detailedOutput, setDetailedOutput] = useState({});\r\n  return (\r\n    <React.Fragment>\r\n      <AppMenu\r\n        setDetailedOutput={setDetailedOutput}\r\n        setShowCategoryInfo={setShowCategoryInfo}\r\n      />\r\n      {showcategoryInfo && (\r\n        <Message>\r\n          <MainPageContent />\r\n        </Message>\r\n      )}\r\n      {!showcategoryInfo && <DetailedPage detailedOutput={detailedOutput} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default MenuPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nimport { Button, Row, Col, Alert } from \"reactstrap\";\r\nimport { Card, Header, Icon, Message, Label } from \"semantic-ui-react\";\r\nimport MenuPage from \"../Main/Menu\";\r\n\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass MemoryGame extends React.Component {\r\n  state = {\r\n    questionAnswer: [],\r\n    duplicateQuestionAnswer: [],\r\n    openedCards: 0,\r\n    score: 0,\r\n    previouslyOpenedCard: -1,\r\n    buttonColor: [],\r\n    winner: [],\r\n    showWinnerText: false,\r\n  };\r\n  initialise = () => {\r\n    var response = [\r\n      \"Moola Roopa Of Ashwatthama;Moola Roopa Of Shuka;Rudra\",\r\n      \"Moola Roopa Of Bheema;Moola Roopa Of Hanuma;Vaayu\",\r\n      \"Who Killed Meghadoot Asur;Shatrughna's brother;Lakshman\",\r\n      \"Poorvashrama Name Vasudeva;Paajaka;Madhwacharya\",\r\n      \"Son of Satyavati Devi;Veda vibhaaga Kartru;Vedavyaas\",\r\n    ];\r\n    let mapping = [];\r\n\r\n    response.map((eachItem, index) => {\r\n      let question = [];\r\n      let answer = \"\";\r\n      question.push(eachItem.split(\";\")[0]);\r\n      question.push(eachItem.split(\";\")[1]);\r\n      answer = eachItem.split(\";\")[2];\r\n      mapping.push({\r\n        question: question,\r\n        answer: answer,\r\n      });\r\n    });\r\n    return mapping;\r\n  };\r\n  componentDidMount = () => {\r\n    const mapping = this.initialise();\r\n    let questionAnswer = [];\r\n    const duplicateQuestionAnswer = [];\r\n    const color = [];\r\n    mapping.map((clues) =>\r\n      clues.question.map(\r\n        (eachClue) => (\r\n          questionAnswer.push(eachClue + \";\" + clues.answer),\r\n          duplicateQuestionAnswer.push(\"Find Match\"),\r\n          color.push(\"info\")\r\n        )\r\n      )\r\n    );\r\n    questionAnswer = this.random(questionAnswer);\r\n    this.setState({\r\n      questionAnswer: questionAnswer,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      buttonColor: color,\r\n    });\r\n  };\r\n  random = (nums) => {\r\n    var ranNums = [],\r\n      i = nums.length,\r\n      j = 0;\r\n    while (i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      ranNums.push(nums[j]);\r\n      nums.splice(j, 1);\r\n    }\r\n    return ranNums;\r\n  };\r\n  // {this.includeButton(index, question)}\r\n  displayMatrix = () => {\r\n    const { duplicateQuestionAnswer } = this.state;\r\n\r\n    return duplicateQuestionAnswer.map((question, index) => (\r\n      <Col xs=\"6\" key={index}>\r\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\r\n      </Col>\r\n    ));\r\n  };\r\n  includeButton = (index, question) => {\r\n    const { buttonColor } = this.state;\r\n    return (\r\n      <Button\r\n        color={buttonColor[index]}\r\n        key={index}\r\n        disabled={\r\n          buttonColor[index] === \"warning\" || buttonColor[index] === \"success\"\r\n        }\r\n        value={index}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          this.changeBtnText(index);\r\n        }}\r\n      >\r\n        {question}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  changeBtnText = (index) => {\r\n    let {\r\n      buttonColor,\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      score,\r\n    } = this.state;\r\n    buttonColor[index] = \"warning\";\r\n    score++;\r\n    duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n\r\n    setTimeout(() => {\r\n      this.validate(index);\r\n    }, 2000);\r\n    this.setState({\r\n      buttonColor: buttonColor,\r\n      score: score,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n    });\r\n  };\r\n  validate = (index) => {\r\n    let {\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      openedCards,\r\n      previouslyOpenedCard,\r\n      buttonColor,\r\n      winner,\r\n      showWinnerText,\r\n    } = this.state;\r\n\r\n    if (openedCards === 1) {\r\n      openedCards = 0;\r\n      if (\r\n        questionAnswer[index].split(\";\")[1] ===\r\n        questionAnswer[previouslyOpenedCard].split(\";\")[1]\r\n      ) {\r\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"success\";\r\n        winner.push(index);\r\n        winner.push(previouslyOpenedCard);\r\n        if (winner.length === questionAnswer.length) {\r\n          showWinnerText = true;\r\n        }\r\n        duplicateQuestionAnswer[index] = questionAnswer[index];\r\n        duplicateQuestionAnswer[previouslyOpenedCard] =\r\n          questionAnswer[previouslyOpenedCard];\r\n      } else {\r\n        duplicateQuestionAnswer[index] = duplicateQuestionAnswer[\r\n          previouslyOpenedCard\r\n        ] = \"Find Match\";\r\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"info\";\r\n      }\r\n    } else {\r\n      openedCards++;\r\n      duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n    }\r\n\r\n    this.setState({\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      previouslyOpenedCard: index,\r\n      openedCards: openedCards,\r\n      showWinnerText: showWinnerText,\r\n      winner: winner,\r\n    });\r\n  };\r\n  render() {\r\n    const { score, showWinnerText } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu />\r\n        <Header as=\"h2\" color=\"teal\">\r\n          <Icon name=\"game\" />\r\n          <Header.Content>Memory Game</Header.Content>\r\n        </Header>\r\n        <Message style={{ marginLeft: \"4%\", marginRight: \"14%\" }}>\r\n          <Label size=\"medium\" color=\"brown\" style={{ marginBottom: \"3%\" }}>\r\n            Score : {score}\r\n          </Label>\r\n\r\n          <Row>{this.displayMatrix()}</Row>\r\n          {showWinnerText && (\r\n            <Row>\r\n              <Header as=\"h2\" color=\"olive\">\r\n                <Icon name=\"winner\" />\r\n                <Header.Content>Congratulations! You Win</Header.Content>\r\n              </Header>\r\n            </Row>\r\n          )}\r\n        </Message>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemoryGame;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nimport { Button, Row, Col, Alert } from \"reactstrap\";\r\nimport { Card, Header, Icon, Message, Label, Menu } from \"semantic-ui-react\";\r\n\r\nclass OddManGame extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    questionAnswer: [],\r\n    hintText: \"Hint\",\r\n    isCorrect: false,\r\n    disableAll: false,\r\n    score: 0,\r\n    duplicateQuestionAnswer: [],\r\n    openedCards: 0,\r\n    previouslyOpenedCard: -1,\r\n    buttonColor: [],\r\n    winner: [],\r\n    showWinnerText: false,\r\n  };\r\n  async componentDidMount() {\r\n    const mapping = await this.initialise();\r\n    this.OddManGameLogic(mapping.length);\r\n    this.setState({\r\n      questionAnswer: mapping,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  OddManGameLogic = (length) => {\r\n    const random = this.random(length);\r\n    this.setState({\r\n      random: random,\r\n    });\r\n  };\r\n  initialise = () => {\r\n    let response = [\r\n      \"Yudhishthira;Bheema;Arjuna;Nakula;Ravana;Yuga;Ravana\",\r\n      \"Prithvi;Jala;Tejas;Vaayu;Grahana Indriya;5 Tanmaatras;Grahana Indriya\",\r\n      \"Shantanu;Devaki;Bheeshma;Ganga Devi;Devavrata;Pandu purvaja;Devaki\",\r\n      \"Krishna;Muchukunda;Kaalyavana;Matsya;Ranachhoda;Bhagawat 10 Skanda;Matsya\",\r\n      \"Arjuna;Drupada;Draupadi;Matsya-Bheda;Ghatotkacha;Swayamvara;Ghatotkacha\",\r\n      \"Ghatotkacha;Hidimba;Krishna;Bheema;Hidimbi;After Laakshaa Gruha;Krishna\",\r\n      \"Virat Raja;Bheeshma-Pratijnya;Bheema as Cook;Bruhannala;Kichaka;Ajnyaat-Vaas;Bheeshma-Pratijnya\",\r\n      \"Hanumaan;Sita;Chudamani;Kumbhakarna;Ashoka Vaatika;Sundarkaanda;Kumbhakarna\",\r\n    ];\r\n    let mapping = [];\r\n\r\n    response.map((eachItem, index) => {\r\n      let question = [];\r\n      let hint = \"\";\r\n      let answer = \"\";\r\n      question.push(eachItem.split(\";\")[0]);\r\n      question.push(eachItem.split(\";\")[1]);\r\n      question.push(eachItem.split(\";\")[2]);\r\n      question.push(eachItem.split(\";\")[3]);\r\n      question.push(eachItem.split(\";\")[4]);\r\n      hint = eachItem.split(\";\")[5];\r\n      answer = eachItem.split(\";\")[6];\r\n      mapping.push({\r\n        question: question,\r\n        hint: hint,\r\n        answer: answer,\r\n      });\r\n    });\r\n    return mapping;\r\n  };\r\n  random = (length) => {\r\n    return Math.floor(Math.random() * length);\r\n  };\r\n  // {this.includeButton(index, question)}\r\n  displayMatrix = () => {\r\n    const { questionAnswer, random } = this.state;\r\n\r\n    return questionAnswer[random].question.map((question, index) => (\r\n      <Col xs=\"8\" key={index}>\r\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\r\n      </Col>\r\n    ));\r\n  };\r\n  includeButton = (index, question) => {\r\n    const {\r\n      questionAnswer,\r\n      buttonColor,\r\n      disableAll,\r\n      isCorrect,\r\n      random,\r\n    } = this.state;\r\n    return (\r\n      <Button\r\n        color={\r\n          isCorrect && questionAnswer[random].answer === question\r\n            ? \"success\"\r\n            : disableAll\r\n            ? \"danger\"\r\n            : buttonColor[index]\r\n        }\r\n        key={index}\r\n        disabled={disableAll}\r\n        value={index}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          this.validateAnswer(question);\r\n        }}\r\n      >\r\n        {question}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  validateAnswer = (question) => {\r\n    let { questionAnswer, random, score } = this.state;\r\n    const validate = question === questionAnswer[random].answer;\r\n    score = validate ? ++score : score;\r\n    this.setState({\r\n      isCorrect: validate,\r\n      score: score,\r\n      disableAll: true,\r\n    });\r\n  };\r\n  changeBtnText = () => {\r\n    let { random, questionAnswer } = this.state;\r\n    this.setState({\r\n      hintText: questionAnswer[random].hint,\r\n    });\r\n  };\r\n\r\n  showHint = (event) => {\r\n    const { questionAnswer, hintText } = this.state;\r\n\r\n    return (\r\n      <div className=\"btn-arrange\">\r\n        <Button\r\n          color=\"warning\"\r\n          disabled={hintText !== \"Hint\"}\r\n          onClick={(event) => {\r\n            event.preventDefault();\r\n            this.changeBtnText();\r\n          }}\r\n        >\r\n          {hintText}\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  nextQuestion = () => {\r\n    const { questionAnswer } = this.state;\r\n    this.OddManGameLogic(questionAnswer.length);\r\n    this.displayMatrix();\r\n    this.setState({\r\n      isCorrect: false,\r\n      disableAll: false,\r\n      hintText: \"Hint\",\r\n    });\r\n  };\r\n  render() {\r\n    const { score, disableAll, isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <div> Loading....</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <AppMenu />\r\n        <Header as=\"h2\" color=\"teal\">\r\n          <Icon name=\"game\" />\r\n          <Header.Content>Find The Odd Man Out</Header.Content>\r\n        </Header>\r\n        <Message style={{ marginLeft: \"4%\", marginRight: \"14%\" }}>\r\n          <Label size=\"medium\" color=\"brown\" style={{ marginBottom: \"3%\" }}>\r\n            Score: (No. of right answers): {score}\r\n          </Label>\r\n          <Row>{this.displayMatrix()}</Row>\r\n          <Row>{this.showHint()}</Row>\r\n          {disableAll && (\r\n            <Row>\r\n              <Button color=\"info\" onClick={this.nextQuestion}>\r\n                Next Question\r\n              </Button>\r\n            </Row>\r\n          )}\r\n        </Message>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OddManGame;\r\n","export const findRandomNumber = (length) => {\r\n    return Math.floor(Math.random() * length);\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Header,\r\n  Container,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport {findRandomNumber} from '../utils/helper'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport AppMenu from \"../common/AppMenu\";\r\nfunction TimerGame() {\r\n  const [startGame, setStartGame] = useState(false);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  const [questionToShow, setQuestionToShow] = useState(\"\")\r\n  const [answer, setAnswer] = useState(\"\")\r\n  const [randomNumber, setRandomNumber] = useState(0);\r\n  const [timeOut, setTimeOut] = useState(false)\r\n  const [key, setKey] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    const questions = [\"Name 5th avataar in Dashaavatara;Vaamana\", \"How many number of Bhakti's are there?; 9\",\r\n  \"Who is the father of Kaalayavana?;Garga Acharya\",\"Brother of Satrajita Raja?; Prasenajit\",\"Husband of Damyanti?; Nala Raja\",\r\n\"Husband of Sukanya Devi?;Chyavana Rishi\", \"Who gave curse to Parikshit Raja?; Shrungi\", \"Shrungi's father's name?;Shameeka Rishi\"]\r\n    setAllQuestions(questions)\r\n  }, [])\r\n\r\n  const handleClick = () => {\r\n    const randomNo = findRandomNumber(allQuestions.length)\r\n    setRandomNumber(randomNo)\r\n    setQuestionToShow(allQuestions[randomNo].split(\";\")[0])\r\n    setAnswer(allQuestions[randomNo].split(\";\")[1])\r\n    setStartGame(true)\r\n    setTimeOut(false)\r\n    setKey(prevKey => prevKey + 1)\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppMenu />\r\n      <Header as=\"h2\" color=\"teal\">\r\n        <Icon name=\"game\" />\r\n        <Header.Content>Question and Answer</Header.Content>\r\n      </Header>\r\n      <Container>\r\n        {!startGame && <Button primary onClick={handleClick}>Start Game</Button>}\r\n        \r\n        {startGame && <React.Fragment>\r\n          <CountdownCircleTimer\r\n          onComplete={() => setTimeOut(true)}\r\n          key={key}\r\n    isPlaying = {!timeOut}\r\n    duration={10}\r\n    size={80}\r\n    colors={[\r\n      ['#004777', 0.33],\r\n      ['#F7B801', 0.33],\r\n      ['#A30000', 0.33],\r\n    ]}\r\n  >\r\n    {({ remainingTime }) => remainingTime}\r\n  </CountdownCircleTimer>\r\n                      <span style={{color:\"red\", fontSize:\"large\"}}>Question: {questionToShow}</span>\r\n                      {timeOut && <React.Fragment>\r\n                         <div style={{marginTop:\"3%\",color:\"green\", fontSize:\"large\"}}>Answer: { answer}</div>\r\n                        <div>\r\n                        <Button primary style={{marginTop: \"3%\"}} onClick={handleClick}>Next Question</Button></div></React.Fragment>}\r\n        </React.Fragment>}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TimerGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Header,\r\n  Container,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport {findRandomNumber} from '../utils/helper'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nconst WSTH = () => {\r\n\r\nconst [startGame, setStartGame] = useState(false);\r\nconst [allQuestions, setAllQuestions] = useState([]);\r\nconst [questionToShow, setQuestionToShow] = useState(\"\")\r\nconst [answer, setAnswer] = useState(\"\")\r\nconst [randomNumber, setRandomNumber] = useState(0);\r\nconst [timeOut, setTimeOut] = useState(false)\r\nconst [key, setKey] = useState(0);\r\n    useEffect(() => {\r\n        const allQuestions = [\"Yontah Pravishya MamaVaacha...; Prahlad to Vishnu\",\"Yato Dharmah tato jaya; Gaandhari to Duryodhana\",\r\n    \"Ashwathama Hatah.. Naro va Kunjaro va; Yudhishtra to Dronacharya\", \"Shravanam Kirtam Vishnum...; Prahlaad to Hirankyakshipu\",\r\n    \"Bheeemacha Balabhadracha Madra-rajacha Veeryavaan...; Duryodhan to All\", \"Jaanami Dharma na cha may pravrutti...; Duryodhan to Gandhari\",\r\n    \"Kim Pashu Purva dehe; Akshobhay teertha to Dhondopant Deshpande (Jayateertha)\", \"Viraat nagam ramyam, gacha maano;Yudhisthira praying to Duraga devi\"]\r\n    setAllQuestions(allQuestions)\r\n    },[])\r\n    const handleClick = () => {\r\n        const randomNo = findRandomNumber(allQuestions.length)\r\n        setRandomNumber(randomNo)\r\n        setQuestionToShow(allQuestions[randomNo].split(\";\")[0])\r\n        setAnswer(allQuestions[randomNo].split(\";\")[1])\r\n        setStartGame(true)\r\n        setTimeOut(false)\r\n        setKey(prevKey => prevKey + 1)\r\n      };\r\n    \r\n      return (\r\n        <React.Fragment>\r\n          <AppMenu />\r\n          <Header as=\"h2\" color=\"teal\">\r\n            <Icon name=\"game\" />\r\n            <Header.Content>Who Said To Home</Header.Content>\r\n          </Header>\r\n          <Container>\r\n            {!startGame && <Button primary onClick={handleClick}>Start Game</Button>}\r\n            \r\n            {startGame && <React.Fragment>\r\n              <CountdownCircleTimer\r\n              onComplete={() => setTimeOut(true)}\r\n              key={key}\r\n        isPlaying = {!timeOut}\r\n        duration={10}\r\n        size={80}\r\n        colors={[\r\n          ['#004777', 0.33],\r\n          ['#F7B801', 0.33],\r\n          ['#A30000', 0.33],\r\n        ]}\r\n      >\r\n        {({ remainingTime }) => remainingTime}\r\n      </CountdownCircleTimer>\r\n                          <span style={{color:\"red\", fontSize:\"large\"}}>Question: {questionToShow}</span>\r\n                          {timeOut && <React.Fragment>\r\n                             <div style={{marginTop:\"3%\",color:\"green\", fontSize:\"large\"}}>Answer: { answer}</div>\r\n                            <div>\r\n                            <Button primary style={{marginTop: \"3%\"}} onClick={handleClick}>Next Question</Button></div></React.Fragment>}\r\n            </React.Fragment>}\r\n          </Container>\r\n        </React.Fragment>\r\n      );\r\n}\r\n\r\nexport default WSTH;","import React from \"react\";\r\nimport HomePage from \"./landing/HomePage\";\r\nimport DetailedPage from \"./Main/DetailedPage\";\r\nimport GameMenu from \"./games/GameMenu\";\r\nimport QuestionSet from \"./QuestionSet\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport OtherPage from \"./OtherPage\";\r\nimport MemoryGame from \"./games/MemoryGame\";\r\nimport OddManGame from \"./games/OddManGame\";\r\nimport TimerGame from \"./games/TimerGame\";\r\nimport MenuPage from \"./Main/Menu\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport WSTH from \"./games/WSTH\";\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" exact={true} component={MenuPage} />\r\n            <Route path=\"/detailed\" component={DetailedPage} />\r\n            <Route path=\"/games\" exact={true} component={GameMenu} />\r\n            <Route path=\"/addGameQuestion\" exact={true} component={OtherPage} />\r\n            <Route path=\"/others\" exact={true} component={QuestionSet} />\r\n            <Route path=\"/memory\" exact={true} component={MemoryGame} />\r\n            <Route path=\"/oddman\" exact={true} component={OddManGame} />\r\n            <Route path=\"/qna\" exact={true} component={TimerGame} />\r\n            <Route path=\"/wsth\" exact={true} component={WSTH} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const categoryDetail = {\r\n  categories: {},\r\n  details: {},\r\n};\r\n\r\nconst categryReducer = (state = categoryDetail, action) => {\r\n  if (action.type === \"LOGGED_IN_USER\") {\r\n    return {\r\n      ...state,\r\n      loggedInUser: action.payload,\r\n    };\r\n  }\r\n  if (action.type === \"CATEGORY_LIST\") {\r\n    return {\r\n      ...state,\r\n      categories: action.payload,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default categryReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport categoryReducer from \"./reducers/category\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst store = createStore(categoryReducer);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}