{"version":3,"sources":["landing/DetailedPage.js","common/AppMenu.js","landing/HomePage.js","games/MemoryGame.js","games/GameMenu.js","QuestionSet.js","App.js","serviceWorker.js","index.js"],"names":["DetailedPage","props","state","showAnswerDetails","subCategory","handleClick","category","document","getElementById","hidden","innerHTML","title","map","eachSubCategory","itemName","useState","className","Row","Col","sm","size","offset","ListGroup","displayList","showDetails","showAnswer","index","href","key","value","onClick","event","preventDefault","Container","id","AppMenu","Navbar","color","dark","expand","NavbarBrand","Nav","navbar","NavItem","NavLink","Component","HomePage","questionList","answer","isLoading","componentDidMount","getQuestionList","length","faq","ListGroupItem","data-id","code","tag","bind","question","currentTarget","dataset","setState","getAnswer","fetch","response","json","body","this","React","MemoryGame","questionAnswer","duplicateQuestionAnswer","openedCards","score","previouslyOpenedCard","buttonColor","winner","showWinnerText","clues","eachClue","push","random","nums","ranNums","i","j","Math","floor","splice","displayMatrix","me","Button","disabled","changeBtnText","split","setTimeout","validate","Alert","GameMenu","showMemoryGame","QuestionSet","faqSection","items","handleChange","target","name","showitemNameTextBoxes","Input","type","placeholder","onChange","addItem","handleSubmit","axios","url","method","data","then","console","log","error","showMsg","showText","catch","categoryLength","xs","Form","FormGroup","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.af4e867e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ListGroup, Row, Col, Container } from \"reactstrap\";\r\nimport \"../App.css\";\r\nconst DetailedPage = (props) => {\r\n  const state = {\r\n    showAnswerDetails: true,\r\n    subCategory: [],\r\n  };\r\n  const showAnswer = () => {\r\n    const answer = props.showAnswer;\r\n    return answer.map((category, index) => (\r\n      <a\r\n        href=\"\"\r\n        key={index}\r\n        value={category.title}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          handleClick(category);\r\n        }}\r\n      >\r\n        {category.title}\r\n      </a>\r\n    ));\r\n  };\r\n  const handleClick = (category) => {\r\n    state.showAnswerDetails = false;\r\n    document.getElementById(\"DetailedAnswer\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").innerHTML =\r\n      \"<div><p/><h1>\" + category.title + \"</h1></div>\";\r\n    document.getElementById(\r\n      \"DetailedAnswer\"\r\n    ).innerHTML = category.subCategory.map(\r\n      (eachSubCategory) =>\r\n        '<div className=\"detailed\"><p/><h3>' +\r\n        eachSubCategory.itemName +\r\n        \"</h3><br/></div>\"\r\n    );\r\n  };\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <Row>\r\n        <Col sm={{ size: \"auto\", offset: 1 }}>\r\n          <ListGroup>{props.displayList}</ListGroup>\r\n        </Col>\r\n        <div className=\"scrollmenu\">{props.showDetails && showAnswer()}</div>\r\n        <Container>\r\n          <div\r\n            id=\"DetailedAnswerTitle\"\r\n            className=\"detailedTitle\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n\r\n          <div\r\n            id=\"DetailedAnswer\"\r\n            className=\"detailed\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n        </Container>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedPage;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass AppMenu extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">Tatwa Information</NavbarBrand>\r\n\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/games\">Games</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/others\">Other Information</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { ListGroupItem } from \"reactstrap\";\r\nimport DetailedPage from \"./DetailedPage\";\r\nimport \"../App.css\";\r\n\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    questionList: [],\r\n    answer: [],\r\n    isLoading: true,\r\n    showDetails: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.getQuestionList();\r\n  };\r\n\r\n  async getQuestionList() {\r\n    const response = await fetch(\"http://localhost:8080/api/faqQuestionList\");\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  displayList = (questionList) => {\r\n    if (questionList.length < 1) return null;\r\n\r\n    return questionList.map((faq, index) => (\r\n      <div key={index} className=\"faq_blocks\">\r\n        <ListGroupItem\r\n          key={index}\r\n          data-id={faq.code}\r\n          color=\"success\"\r\n          tag=\"a\"\r\n          href=\"\"\r\n          onClick={this.showDetails.bind(this)}\r\n        >\r\n          {faq.question}\r\n        </ListGroupItem>\r\n      </div>\r\n    ));\r\n  };\r\n  showDetails = (event) => {\r\n    event.preventDefault();\r\n    const code = event.currentTarget.dataset.id;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.getAnswer(code);\r\n  };\r\n  async getAnswer(code) {\r\n    const response = await fetch(\r\n      \"http://localhost:8080/api/faqSpecificAnswer?code=\" + code\r\n    );\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n      showDetails: true,\r\n      answer: body[0] && body[0].category,\r\n    });\r\n\r\n    //this.showAnswer();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, questionList, showDetails, answer } = this.state;\r\n    if (isLoading) {\r\n      return <div> Loading....</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <DetailedPage\r\n          displayList={this.displayList(questionList)}\r\n          showDetails={showDetails}\r\n          showAnswer={answer}\r\n          questionList={questionList}\r\n          showAnswerDetails={false}\r\n        ></DetailedPage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nimport { Button, Row, Col, Alert } from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass MemoryGame extends React.Component {\r\n  state = {\r\n    questionAnswer: [],\r\n    duplicateQuestionAnswer: [],\r\n    openedCards: 0,\r\n    score: 0,\r\n    previouslyOpenedCard: -1,\r\n    buttonColor: [],\r\n    winner: [],\r\n    showWinnerText: false,\r\n  };\r\n  componentDidMount = () => {\r\n    const mapping = [\r\n      {\r\n        question: [\"Moola Roopa Of Ashwatthama\", \"Moola Roopa Of Shuka\"],\r\n        answer: \"Rudra\",\r\n      },\r\n      {\r\n        question: [\"Moola Roopa Of Bheema\", \"Moola Roopa Of Hanuma\"],\r\n        answer: \"Vaayu\",\r\n      },\r\n      {\r\n        question: [\"Who Killed Meghadoot Asur\", \"Shatrughna's brother\"],\r\n        answer: \"Lakshman\",\r\n      },\r\n      {\r\n        question: [\"Poorvashrama Name Vasudeva\", \"Paajaka\"],\r\n        answer: \"Madhwacharya\",\r\n      },\r\n      {\r\n        question: [\"Son of Satyavati Devi\", \"Veda vibhaaga Kartru\"],\r\n        answer: \"Vedavyaas\",\r\n      },\r\n    ];\r\n    let questionAnswer = [];\r\n    const duplicateQuestionAnswer = [];\r\n    const color = [];\r\n    mapping.map((clues, index) =>\r\n      clues.question.map(\r\n        (eachClue) => (\r\n          questionAnswer.push(eachClue + \";\" + clues.answer),\r\n          duplicateQuestionAnswer.push(\"Find Match\"),\r\n          color.push(\"info\")\r\n        )\r\n      )\r\n    );\r\n    questionAnswer = this.random(questionAnswer);\r\n    this.setState({\r\n      questionAnswer: questionAnswer,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      buttonColor: color,\r\n    });\r\n  };\r\n  random = (nums) => {\r\n    var ranNums = [],\r\n      i = nums.length,\r\n      j = 0;\r\n    while (i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      ranNums.push(nums[j]);\r\n      nums.splice(j, 1);\r\n    }\r\n    return ranNums;\r\n  };\r\n  displayMatrix = () => {\r\n    const { duplicateQuestionAnswer, buttonColor } = this.state;\r\n    const me = this;\r\n    return duplicateQuestionAnswer.map((question, index) => (\r\n      <div className=\"btn-arrange\">\r\n        <Button\r\n          color={buttonColor[index]}\r\n          key={index}\r\n          disabled={\r\n            buttonColor[index] === \"warning\" || buttonColor[index] === \"success\"\r\n          }\r\n          value={index}\r\n          onClick={(event) => {\r\n            event.preventDefault();\r\n            me.changeBtnText(index);\r\n          }}\r\n        >\r\n          {question}\r\n        </Button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  changeBtnText = (index) => {\r\n    let {\r\n      buttonColor,\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      score,\r\n    } = this.state;\r\n    buttonColor[index] = \"warning\";\r\n    score++;\r\n    duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n\r\n    setTimeout(() => {\r\n      this.validate(index);\r\n    }, 2000);\r\n    this.setState({\r\n      buttonColor: buttonColor,\r\n      score: score,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n    });\r\n  };\r\n  validate = (index) => {\r\n    let {\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      openedCards,\r\n      previouslyOpenedCard,\r\n      buttonColor,\r\n      winner,\r\n      showWinnerText,\r\n    } = this.state;\r\n\r\n    if (openedCards === 1) {\r\n      openedCards = 0;\r\n      if (\r\n        questionAnswer[index].split(\";\")[1] ===\r\n        questionAnswer[previouslyOpenedCard].split(\";\")[1]\r\n      ) {\r\n        buttonColor[index] = \"success\";\r\n        buttonColor[previouslyOpenedCard] = \"success\";\r\n        winner.push(index);\r\n        winner.push(previouslyOpenedCard);\r\n        if (winner.length === questionAnswer.length) {\r\n          showWinnerText = true;\r\n        }\r\n        duplicateQuestionAnswer[index] = questionAnswer[index];\r\n        duplicateQuestionAnswer[previouslyOpenedCard] =\r\n          questionAnswer[previouslyOpenedCard];\r\n      } else {\r\n        duplicateQuestionAnswer[index] = \"Find Match\";\r\n        duplicateQuestionAnswer[previouslyOpenedCard] = \"Find Match\";\r\n        buttonColor[index] = \"info\";\r\n        buttonColor[previouslyOpenedCard] = \"info\";\r\n      }\r\n    } else {\r\n      openedCards++;\r\n      duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n    }\r\n\r\n    this.setState({\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      previouslyOpenedCard: index,\r\n      openedCards: openedCards,\r\n      showWinnerText: showWinnerText,\r\n      winner: winner,\r\n    });\r\n  };\r\n  render() {\r\n    const { score, showWinnerText } = this.state;\r\n    return (\r\n      <div className=\"arrangeButtons\">\r\n        <Row>Score: (No. of clicks): {score}</Row>\r\n        <Row>{this.displayMatrix()}</Row>\r\n        {showWinnerText && (\r\n          <Row>\r\n            <Alert color=\"danger\">Congratulations ---- Winner</Alert>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemoryGame;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport { Button, Row, Col, ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport MemoryGame from \"./MemoryGame\";\r\n\r\nclass GameMenu extends React.Component {\r\n  state = {\r\n    showMemoryGame: false,\r\n  };\r\n  render() {\r\n    let { showMemoryGame } = this.state;\r\n    const me = this;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <div className=\"app\">\r\n          <Row>\r\n            <Col sm={{ size: \"auto\", offset: 1 }}>\r\n              <ListGroup>\r\n                <ListGroupItem\r\n                  key=\"Memory\"\r\n                  color=\"success\"\r\n                  tag=\"a\"\r\n                  href=\"\"\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    showMemoryGame = true;\r\n                    me.setState({\r\n                      showMemoryGame: true,\r\n                    });\r\n                  }}\r\n                >\r\n                  Memory Game\r\n                </ListGroupItem>\r\n                <ListGroupItem>Find Odd Man Out --- Coming Soon</ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n            {showMemoryGame && <MemoryGame></MemoryGame>}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GameMenu;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"./common/AppMenu\";\r\n//import { isValidLoginDetails } from \"../common/validate\";\r\n//import \"./styles.css\";\r\nclass QuestionSet extends React.Component {\r\n  state = {\r\n    faqSection: {},\r\n    items: {\r\n      question: \"\",\r\n      code: \"\",\r\n      category: [\r\n        {\r\n          title: \"\",\r\n          subCategory: [\r\n            {\r\n              itemName: \"\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  handleChange = (event) => {\r\n    let { items } = this.state;\r\n\r\n    if (event.target.name === \"title\") {\r\n      items.category[0].title = event.target.value;\r\n    } else if (event.target.name === \"subCategory\") {\r\n      items.category[0].subCategory[event.target.id].itemName =\r\n        event.target.value;\r\n      items.category[0].subCategory[event.target.id].index = event.target.id;\r\n    } else {\r\n      items[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  showitemNameTextBoxes = (event) => {\r\n    let { items } = this.state;\r\n    return items.category[0].subCategory.map((faq, index) => (\r\n      <div key={index}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"subCategory\"\r\n          id={index}\r\n          index={index}\r\n          placeholder=\"Enter Subcategory\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n  addItem = () => {\r\n    let { items } = this.state;\r\n    items.category[0].subCategory.push({ itemName: \"\" });\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { items } = this.state;\r\n    const me = this;\r\n    axios({\r\n      url: \"/faq/saveAnswer/\",\r\n      method: \"POST\",\r\n      data: items,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data saved\", response.data.error);\r\n        const showMsg = response.data.error ? \"error\" : \"success\";\r\n        me.setState({\r\n          showText: showMsg,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Some error occurred\");\r\n      });\r\n  };\r\n  render() {\r\n    let { items, categoryLength } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Add new Question Section</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        id=\"code\"\r\n                        placeholder=\"Enter Section Code (eg: avatars)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"categoryTitle\"\r\n                        placeholder=\"Enter Category Title (eg: Mahabharata)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup></FormGroup>\r\n                    <FormGroup>{this.showitemNameTextBoxes()}</FormGroup>\r\n                    <FormGroup>\r\n                      <Button onClick={this.addItem}>\r\n                        Add another subCategory\r\n                      </Button>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionSet;\r\n","import React from \"react\";\nimport HomePage from \"./landing/HomePage\";\nimport DetailedPage from \"./landing/DetailedPage\";\nimport GameMenu from \"./games/GameMenu\";\nimport QuestionSet from \"./QuestionSet\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true} component={HomePage} />\n            <Route path=\"/detail\" exact={true} component={DetailedPage} />\n            <Route path=\"/games\" exact={true} component={GameMenu} />\n            <Route path=\"/others\" exact={true} component={QuestionSet} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}