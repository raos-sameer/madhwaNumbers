{"version":3,"sources":["landing/DetailedPage.js","common/AppMenu.js","landing/HomePage.js","games/MemoryGame.js","games/OddManGame.js","games/TimerGame.js","games/GameMenu.js","QuestionSet.js","OtherPage.js","games/QuizGame.js","Main/ShowContent.js","Main/DetailedPage.js","Main/Menu.js","App.js","serviceWorker.js","index.js"],"names":["DetailedPage","props","state","showAnswerDetails","subCategory","handleClick","category","document","getElementById","hidden","innerHTML","title","map","eachSubCategory","itemName","join","className","Row","Col","sm","size","offset","ListGroup","displayList","showDetails","showAnswer","index","href","key","value","onClick","event","preventDefault","Container","id","AppMenu","Navbar","color","dark","expand","NavbarBrand","Nav","navbar","NavItem","NavLink","Component","React","MemoryGame","questionAnswer","duplicateQuestionAnswer","openedCards","score","previouslyOpenedCard","buttonColor","winner","showWinnerText","initialise","mapping","eachItem","answer","question","push","split","componentDidMount","clues","eachClue","random","setState","nums","ranNums","i","length","j","Math","floor","splice","displayMatrix","xs","includeButton","Button","disabled","changeBtnText","setTimeout","validate","this","Alert","OddManGame","isLoading","hintText","isCorrect","disableAll","OddManGameLogic","hint","validateAnswer","showHint","nextQuestion","TimerGame","useState","rowText","setRowText","useEffect","showMatrix","showTextValues","matrix","0","text","1","2","row","includeRow","console","log","col","bgColor","class","a","target","classList","card","querySelector","addEventListener","toggle","GameMenu","showMemoryGame","showOddManGame","showTimerGame","ButtonGroup","QuestionSet","faqSection","items","code","handleChange","name","showitemNameTextBoxes","faq","Input","type","placeholder","onChange","addItem","handleSubmit","me","axios","url","method","data","then","response","error","showMsg","showText","catch","Form","FormGroup","OtherPage","input","inputRequest","selectedGame","slice","submitForm","addOddManForm","indents","md","onBlur","addMemoryForm","columnNo","selectGame","check","Label","QuizGame","setValue","setError","helperText","setHelperText","onSubmit","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","FormHelperText","variant","ShowContent","List","animated","contenInfo","Item","Content","Header","Accordion","activeItem","showContent","setShowContent","setContentInfo","Fragment","Menu","pointing","detailedOutput","active","position","icon","MenuPage","menuItems","setMenuItems","showOutput","setShowOutput","userSelection","setUserSelection","setDetailedOutput","getMenuItems","fetch","json","body","inverted","Dropdown","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6769d9cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListGroup, Row, Col, Container } from \"reactstrap\";\r\nimport \"../App.css\";\r\nconst DetailedPage = (props) => {\r\n  const state = {\r\n    showAnswerDetails: true,\r\n    subCategory: [],\r\n  };\r\n  const showAnswer = () => {\r\n    const answer = props.showAnswer;\r\n    return answer.map((category, index) => (\r\n      <a\r\n        href=\"\"\r\n        key={index}\r\n        value={category.title}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          handleClick(category);\r\n        }}\r\n      >\r\n        {category.title}\r\n      </a>\r\n    ));\r\n  };\r\n  const handleClick = (category) => {\r\n    state.showAnswerDetails = false;\r\n    document.getElementById(\"DetailedAnswer\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").hidden = false;\r\n    document.getElementById(\"DetailedAnswerTitle\").innerHTML =\r\n      \"<h3>\" + category.title + \"</h3>\";\r\n    document.getElementById(\r\n      \"DetailedAnswer\"\r\n    ).innerHTML = category.subCategory\r\n      .map((eachSubCategory) => \"<h5>\" + eachSubCategory.itemName + \"</h5>\")\r\n      .join(\"\");\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <Row>\r\n        <Col sm={{ size: \"auto\", offset: 1 }}>\r\n          <ListGroup>{props.displayList}</ListGroup>\r\n        </Col>\r\n        <div className=\"scrollmenu\">{props.showDetails && showAnswer()}</div>\r\n        <Container>\r\n          <div\r\n            id=\"DetailedAnswerTitle\"\r\n            className=\"detailedTitle\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n\r\n          <div\r\n            id=\"DetailedAnswer\"\r\n            className=\"detailed\"\r\n            hidden={state.showAnswerDetails}\r\n          ></div>\r\n        </Container>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedPage;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass AppMenu extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">Tatwas Information</NavbarBrand>\r\n\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/games\">Games</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/others\">Other Information</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from \"react\";\r\nimport { ListGroupItem } from \"reactstrap\";\r\nimport DetailedPage from \"./DetailedPage\";\r\nimport \"../App.css\";\r\n\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    questionList: [],\r\n    answer: [],\r\n    isLoading: true,\r\n    showDetails: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.getQuestionList();\r\n  };\r\n\r\n  async getQuestionList() {\r\n    const response = await fetch(\"/api/faqQuestionList\");\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  displayList = (questionList) => {\r\n    if (questionList.length < 1) return null;\r\n\r\n    return questionList.map((faq, index) => (\r\n      <div key={index} className=\"faq_blocks\">\r\n        <ListGroupItem\r\n          key={index}\r\n          data-id={faq.code}\r\n          color=\"success\"\r\n          tag=\"a\"\r\n          href=\"\"\r\n          onClick={this.showDetails.bind(this)}\r\n        >\r\n          {faq.question}\r\n        </ListGroupItem>\r\n      </div>\r\n    ));\r\n  };\r\n  showDetails = (event) => {\r\n    event.preventDefault();\r\n    const code = event.currentTarget.dataset.id;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.getAnswer(code);\r\n  };\r\n  async getAnswer(code) {\r\n    const response = await fetch(\"/api/faqSpecificAnswer?code=\" + code);\r\n    const body = await response.json();\r\n\r\n    this.setState({\r\n      questionList: body,\r\n      isLoading: false,\r\n      showDetails: true,\r\n      answer: body[0] && body[0].category,\r\n    });\r\n\r\n    //this.showAnswer();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, questionList, showDetails, answer } = this.state;\r\n    if (isLoading) {\r\n      return <div> Loading....</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <div>Sameer</div>\r\n        <DetailedPage\r\n          displayList={this.displayList(questionList)}\r\n          showDetails={showDetails}\r\n          showAnswer={answer}\r\n          questionList={questionList}\r\n          showAnswerDetails={false}\r\n        ></DetailedPage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nimport { Button, Row, Col, Alert } from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\n\r\nclass MemoryGame extends React.Component {\r\n  state = {\r\n    questionAnswer: [],\r\n    duplicateQuestionAnswer: [],\r\n    openedCards: 0,\r\n    score: 0,\r\n    previouslyOpenedCard: -1,\r\n    buttonColor: [],\r\n    winner: [],\r\n    showWinnerText: false,\r\n  };\r\n  initialise = () => {\r\n    var response = [\r\n      \"Moola Roopa Of Ashwatthama;Moola Roopa Of Shuka;Rudra\",\r\n      \"Moola Roopa Of Bheema;Moola Roopa Of Hanuma;Vaayu\",\r\n      \"Who Killed Meghadoot Asur;Shatrughna's brother;Lakshman\",\r\n      \"Poorvashrama Name Vasudeva;Paajaka;Madhwacharya\",\r\n      \"Son of Satyavati Devi;Veda vibhaaga Kartru;Vedavyaas\",\r\n    ];\r\n    let mapping = [];\r\n\r\n    response.map((eachItem, index) => {\r\n      let question = [];\r\n      let answer = \"\";\r\n      question.push(eachItem.split(\";\")[0]);\r\n      question.push(eachItem.split(\";\")[1]);\r\n      answer = eachItem.split(\";\")[2];\r\n      mapping.push({\r\n        question: question,\r\n        answer: answer,\r\n      });\r\n    });\r\n    return mapping;\r\n  };\r\n  componentDidMount = () => {\r\n    const mapping = this.initialise();\r\n    let questionAnswer = [];\r\n    const duplicateQuestionAnswer = [];\r\n    const color = [];\r\n    mapping.map((clues) =>\r\n      clues.question.map(\r\n        (eachClue) => (\r\n          questionAnswer.push(eachClue + \";\" + clues.answer),\r\n          duplicateQuestionAnswer.push(\"Find Match\"),\r\n          color.push(\"info\")\r\n        )\r\n      )\r\n    );\r\n    questionAnswer = this.random(questionAnswer);\r\n    this.setState({\r\n      questionAnswer: questionAnswer,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      buttonColor: color,\r\n    });\r\n  };\r\n  random = (nums) => {\r\n    var ranNums = [],\r\n      i = nums.length,\r\n      j = 0;\r\n    while (i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      ranNums.push(nums[j]);\r\n      nums.splice(j, 1);\r\n    }\r\n    return ranNums;\r\n  };\r\n  // {this.includeButton(index, question)}\r\n  displayMatrix = () => {\r\n    const { duplicateQuestionAnswer } = this.state;\r\n\r\n    return duplicateQuestionAnswer.map((question, index) => (\r\n      <Col xs=\"6\" key={index}>\r\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\r\n      </Col>\r\n    ));\r\n  };\r\n  includeButton = (index, question) => {\r\n    const { buttonColor } = this.state;\r\n    return (\r\n      <Button\r\n        color={buttonColor[index]}\r\n        key={index}\r\n        disabled={\r\n          buttonColor[index] === \"warning\" || buttonColor[index] === \"success\"\r\n        }\r\n        value={index}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          this.changeBtnText(index);\r\n        }}\r\n      >\r\n        {question}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  changeBtnText = (index) => {\r\n    let {\r\n      buttonColor,\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      score,\r\n    } = this.state;\r\n    buttonColor[index] = \"warning\";\r\n    score++;\r\n    duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n\r\n    setTimeout(() => {\r\n      this.validate(index);\r\n    }, 2000);\r\n    this.setState({\r\n      buttonColor: buttonColor,\r\n      score: score,\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n    });\r\n  };\r\n  validate = (index) => {\r\n    let {\r\n      duplicateQuestionAnswer,\r\n      questionAnswer,\r\n      openedCards,\r\n      previouslyOpenedCard,\r\n      buttonColor,\r\n      winner,\r\n      showWinnerText,\r\n    } = this.state;\r\n\r\n    if (openedCards === 1) {\r\n      openedCards = 0;\r\n      if (\r\n        questionAnswer[index].split(\";\")[1] ===\r\n        questionAnswer[previouslyOpenedCard].split(\";\")[1]\r\n      ) {\r\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"success\";\r\n        winner.push(index);\r\n        winner.push(previouslyOpenedCard);\r\n        if (winner.length === questionAnswer.length) {\r\n          showWinnerText = true;\r\n        }\r\n        duplicateQuestionAnswer[index] = questionAnswer[index];\r\n        duplicateQuestionAnswer[previouslyOpenedCard] =\r\n          questionAnswer[previouslyOpenedCard];\r\n      } else {\r\n        duplicateQuestionAnswer[index] = duplicateQuestionAnswer[\r\n          previouslyOpenedCard\r\n        ] = \"Find Match\";\r\n        buttonColor[index] = buttonColor[previouslyOpenedCard] = \"info\";\r\n      }\r\n    } else {\r\n      openedCards++;\r\n      duplicateQuestionAnswer[index] = questionAnswer[index].split(\";\")[0];\r\n    }\r\n\r\n    this.setState({\r\n      duplicateQuestionAnswer: duplicateQuestionAnswer,\r\n      previouslyOpenedCard: index,\r\n      openedCards: openedCards,\r\n      showWinnerText: showWinnerText,\r\n      winner: winner,\r\n    });\r\n  };\r\n  render() {\r\n    const { score, showWinnerText } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <h3 className=\"header\"> Memory Game</h3>\r\n        <div className=\"arrangeButtons\">\r\n          <Row>Score: (No. of clicks): {score}</Row>\r\n          <Row>{this.displayMatrix()}</Row>\r\n          {showWinnerText && (\r\n            <Row>\r\n              <Alert color=\"danger\">Congratulations ---- Winner</Alert>\r\n            </Row>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemoryGame;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nimport { Button, Row, Col, Alert } from \"reactstrap\";\r\n\r\nclass OddManGame extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    questionAnswer: [],\r\n    hintText: \"Hint\",\r\n    isCorrect: false,\r\n    disableAll: false,\r\n    score: 0,\r\n    duplicateQuestionAnswer: [],\r\n    openedCards: 0,\r\n    previouslyOpenedCard: -1,\r\n    buttonColor: [],\r\n    winner: [],\r\n    showWinnerText: false,\r\n  };\r\n  async componentDidMount() {\r\n    const mapping = await this.initialise();\r\n    this.OddManGameLogic(mapping.length);\r\n    this.setState({\r\n      questionAnswer: mapping,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  OddManGameLogic = (length) => {\r\n    const random = this.random(length);\r\n    this.setState({\r\n      random: random,\r\n    });\r\n  };\r\n  initialise = () => {\r\n    let response = [\r\n      \"Yudhishthira;Bheema;Arjuna;Nakula;Ravana;Yuga;Ravana\",\r\n      \"Prithvi;Jala;Tejas;Vaayu;Grahana Indriya;5 Tanmaatras;Grahana Indriya\",\r\n      \"Shantanu;Devaki;Bheeshma;Ganga Devi;Devavrata;Pandu purvaja;Devaki\",\r\n      \"Krishna;Muchukunda;Kaalyavana;Matsya;Ranachhoda;Bhagawat 10 Skanda;Matsya\",\r\n      \"Arjuna;Drupada;Draupadi;Matsya-Bheda;Ghatotkacha;Swayamvara;Ghatotkacha\",\r\n      \"Ghatotkacha;Hidimba;Krishna;Bheema;Hidimbi;After Laakshaa Gruha;Krishna\",\r\n      \"Virat Raja;Bheeshma-Pratijnya;Bheema as Cook;Bruhannala;Kichaka;Ajnyaat-Vaas;Bheeshma-Pratijnya\",\r\n      \"Hanumaan;Sita;Chudamani;Kumbhakarna;Ashoka Vaatika;Sundarkaanda;Kumbhakarna\",\r\n    ];\r\n    let mapping = [];\r\n\r\n    response.map((eachItem, index) => {\r\n      let question = [];\r\n      let hint = \"\";\r\n      let answer = \"\";\r\n      question.push(eachItem.split(\";\")[0]);\r\n      question.push(eachItem.split(\";\")[1]);\r\n      question.push(eachItem.split(\";\")[2]);\r\n      question.push(eachItem.split(\";\")[3]);\r\n      question.push(eachItem.split(\";\")[4]);\r\n      hint = eachItem.split(\";\")[5];\r\n      answer = eachItem.split(\";\")[6];\r\n      mapping.push({\r\n        question: question,\r\n        hint: hint,\r\n        answer: answer,\r\n      });\r\n    });\r\n    return mapping;\r\n  };\r\n  random = (length) => {\r\n    return Math.floor(Math.random() * length);\r\n  };\r\n  // {this.includeButton(index, question)}\r\n  displayMatrix = () => {\r\n    const { questionAnswer, random } = this.state;\r\n\r\n    return questionAnswer[random].question.map((question, index) => (\r\n      <Col xs=\"8\" key={index}>\r\n        <div className=\"btn-arrange\">{this.includeButton(index, question)}</div>\r\n      </Col>\r\n    ));\r\n  };\r\n  includeButton = (index, question) => {\r\n    const {\r\n      questionAnswer,\r\n      buttonColor,\r\n      disableAll,\r\n      isCorrect,\r\n      random,\r\n    } = this.state;\r\n    return (\r\n      <Button\r\n        color={\r\n          isCorrect && questionAnswer[random].answer === question\r\n            ? \"success\"\r\n            : disableAll\r\n            ? \"danger\"\r\n            : buttonColor[index]\r\n        }\r\n        key={index}\r\n        disabled={disableAll}\r\n        value={index}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          this.validateAnswer(question);\r\n        }}\r\n      >\r\n        {question}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  validateAnswer = (question) => {\r\n    let { questionAnswer, random, score } = this.state;\r\n    const validate = question === questionAnswer[random].answer;\r\n    score = validate ? ++score : score;\r\n    this.setState({\r\n      isCorrect: validate,\r\n      score: score,\r\n      disableAll: true,\r\n    });\r\n  };\r\n  changeBtnText = () => {\r\n    let { random, questionAnswer } = this.state;\r\n    this.setState({\r\n      hintText: questionAnswer[random].hint,\r\n    });\r\n  };\r\n\r\n  showHint = (event) => {\r\n    const { questionAnswer, hintText } = this.state;\r\n\r\n    return (\r\n      <div className=\"btn-arrange\">\r\n        <Button\r\n          color=\"warning\"\r\n          disabled={hintText !== \"Hint\"}\r\n          onClick={(event) => {\r\n            event.preventDefault();\r\n            this.changeBtnText();\r\n          }}\r\n        >\r\n          {hintText}\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  nextQuestion = () => {\r\n    const { questionAnswer } = this.state;\r\n    this.OddManGameLogic(questionAnswer.length);\r\n    this.displayMatrix();\r\n    this.setState({\r\n      isCorrect: false,\r\n      disableAll: false,\r\n      hintText: \"Hint\",\r\n    });\r\n  };\r\n  render() {\r\n    const { score, disableAll, isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <div> Loading....</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <h3 className=\"header\"> Find Odd Man Out</h3>\r\n        <div className=\"arrangeButtons\">\r\n          <Row>Score: (No. of right answers): {score}</Row>\r\n          <Row>{this.displayMatrix()}</Row>\r\n          <Row>{this.showHint()}</Row>\r\n          {disableAll && (\r\n            <Row>\r\n              <Button color=\"info\" onClick={this.nextQuestion}>\r\n                Next Question\r\n              </Button>\r\n            </Row>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OddManGame;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport \"../App.css\";\r\nimport \"./MemoryGame.css\";\r\nconst TimerGame = () => {\r\n  const [rowText, setRowText] = useState([]);\r\n  useEffect(() => {\r\n    if (rowText.length === 0) {\r\n      let row = showMatrix();\r\n    }\r\n    showTextValues();\r\n  }, [rowText]);\r\n  const matrix = {\r\n    0: { color: \"#ccddee\", text: \"Easy\" },\r\n    1: { color: \"#aaddee\", text: \"Medium\" },\r\n    2: { color: \"#aabbff\", text: \"Difficult\" },\r\n  };\r\n\r\n  const showMatrix = () => {\r\n    let row = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      row.push(<tr>{includeRow(i)}</tr>);\r\n    }\r\n    setRowText(row);\r\n    console.log(row);\r\n    return row;\r\n  };\r\n  const includeRow = (row) => {\r\n    let col = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      col.push(\r\n        <td\r\n          bgColor={matrix[(row + i) % 3].color}\r\n          row={row}\r\n          col={i}\r\n          onClick={(event) => handleClick(event)}\r\n        >\r\n          <div class=\"scene\">\r\n            <div class=\"card\">\r\n              <div class=\"card__face card__face--front\">front</div>\r\n              <div class=\"card__face card__face--back\">back</div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n    return col;\r\n  };\r\n  async function handleClick(event) {\r\n    console.log(\"handleClick: \", event.target.classList);\r\n    var card = document.querySelector(\".card\");\r\n    card.addEventListener(\"click\", function () {\r\n      card.classList.toggle(\"is-flipped\");\r\n    });\r\n  }\r\n  function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n  const showTextValues = () => {\r\n    console.log(\"After ALL  \", rowText[0]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <strong className=\"scrollmenu\">Self Evaluation Questions::</strong>\r\n\r\n        <table>\r\n          <th>100 Points</th>\r\n          <th>200 Points</th>\r\n          <th>300 Points</th>\r\n          {rowText}\r\n        </table>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TimerGame;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nimport MemoryGame from \"./MemoryGame\";\r\nimport OddManGame from \"./OddManGame\";\r\nimport TimerGame from \"./TimerGame\";\r\n\r\nclass GameMenu extends React.Component {\r\n  state = {\r\n    showMemoryGame: false,\r\n    showOddManGame: false,\r\n    showTimerGame: false,\r\n  };\r\n  render() {\r\n    let { showMemoryGame, showOddManGame, showTimerGame } = this.state;\r\n    const me = this;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <p />\r\n        <div className=\"app\">\r\n          <Row>\r\n            {!showMemoryGame && !showOddManGame && !showTimerGame && (\r\n              <Col sm={{ size: \"auto\", offset: 1 }}>\r\n                <ButtonGroup>\r\n                  <Button href=\"/memory\">Memory Game</Button>\r\n                  <Button href=\"/oddman\">Odd man Game</Button>\r\n                  <Button href=\"/timer\">Timer Game</Button>\r\n                  <Button href=\"/quiz\">Quiz Game</Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GameMenu;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"./common/AppMenu\";\r\n//import { isValidLoginDetails } from \"../common/validate\";\r\n//import \"./styles.css\";\r\nclass QuestionSet extends React.Component {\r\n  state = {\r\n    faqSection: {},\r\n    items: {\r\n      question: \"\",\r\n      code: \"\",\r\n      category: [\r\n        {\r\n          title: \"\",\r\n          subCategory: [\r\n            {\r\n              itemName: \"\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  handleChange = (event) => {\r\n    let { items } = this.state;\r\n\r\n    if (event.target.name === \"title\") {\r\n      items.category[0].title = event.target.value;\r\n    } else if (event.target.name === \"subCategory\") {\r\n      items.category[0].subCategory[event.target.id].itemName =\r\n        event.target.value;\r\n      items.category[0].subCategory[event.target.id].index = event.target.id;\r\n    } else {\r\n      items[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  showitemNameTextBoxes = (event) => {\r\n    let { items } = this.state;\r\n    return items.category[0].subCategory.map((faq, index) => (\r\n      <div key={index}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"subCategory\"\r\n          id={index}\r\n          index={index}\r\n          placeholder=\"Enter Subcategory\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n  addItem = () => {\r\n    let { items } = this.state;\r\n    items.category[0].subCategory.push({ itemName: \"\" });\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { items } = this.state;\r\n    const me = this;\r\n    axios({\r\n      url: \"/faq/saveAnswer/\",\r\n      method: \"POST\",\r\n      data: items,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data saved\", response.data.error);\r\n        const showMsg = response.data.error ? \"error\" : \"success\";\r\n        me.setState({\r\n          showText: showMsg,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Some error occurred\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Add new Question Section</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        id=\"code\"\r\n                        placeholder=\"Enter Section Code (eg: avatars)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"categoryTitle\"\r\n                        placeholder=\"Enter Category Title (eg: Mahabharata)\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup></FormGroup>\r\n                    <FormGroup>{this.showitemNameTextBoxes()}</FormGroup>\r\n                    <FormGroup>\r\n                      <Button onClick={this.addItem}>\r\n                        Add another subCategory\r\n                      </Button>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionSet;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport AppMenu from \"./common/AppMenu\";\r\n//import { isValidLoginDetails } from \"../common/validate\";\r\n//import \"./styles.css\";\r\nclass OtherPage extends React.Component {\r\n  state = {\r\n    question: [],\r\n    input: [],\r\n    mapping: [],\r\n    inputRequest: {\r\n      code: \"\",\r\n      input: [],\r\n    },\r\n  };\r\n  handleSubmit = (event) => {\r\n    let { selectedGame, input, mapping, inputRequest } = this.state;\r\n    event.preventDefault();\r\n    if (selectedGame === \"oddManOut\") {\r\n      mapping = input.join(\";\");\r\n    } else {\r\n      mapping[0] = input.slice(0, 3).join(\";\");\r\n      mapping[1] = input.slice(3, 6).join(\";\");\r\n      mapping[2] = input.slice(6, 9).join(\";\");\r\n      mapping[3] = input.slice(9, 12).join(\";\");\r\n      mapping[4] = input.slice(12, 15).join(\";\");\r\n    }\r\n    inputRequest.input.push(mapping);\r\n    inputRequest.code = selectedGame;\r\n    this.submitForm(inputRequest);\r\n  };\r\n  submitForm = (inputRequest) => {\r\n    const me = this;\r\n    axios({\r\n      url: \"/memory/saveGameQuestion/\",\r\n      method: \"POST\",\r\n      data: inputRequest,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data saved\", response.data.error);\r\n        const showMsg = response.data.error ? \"error\" : \"success\";\r\n        me.setState({\r\n          showText: showMsg,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Some error occurred\");\r\n      });\r\n  };\r\n  addOddManForm = () => {\r\n    var indents = [];\r\n    for (var index = 0; index < 7; index++) {\r\n      indents.push(\r\n        <Row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={index}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    return indents;\r\n  };\r\n  addMemoryForm = () => {\r\n    var indents = [];\r\n    var columnNo = -2;\r\n    for (var index = 0; index < 5; index++) {\r\n      columnNo = columnNo + 2;\r\n      indents.push(\r\n        <Row>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index + 1}\r\n                name={index}\r\n                placeholder=\"Enter the question\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                id={columnNo + index + 2}\r\n                name={index}\r\n                placeholder=\"Enter the answer\"\r\n                onBlur={this.handleChange}\r\n              />{\" \"}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n    return indents;\r\n  };\r\n  handleChange = (event) => {\r\n    let { input } = this.state;\r\n    input[event.target.id] = event.target.value;\r\n    console.log(input);\r\n    this.setState({\r\n      input: input,\r\n    });\r\n  };\r\n  selectGame = (event) => {\r\n    this.setState({\r\n      selectedGame: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { selectedGame } = this.state;\r\n    return (\r\n      <div>\r\n        <AppMenu></AppMenu>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              <div className=\"headersection\">\r\n                <h3>Add new Question Section</h3>\r\n                <div className=\"mainsection\">\r\n                  <Form>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"radio2\"\r\n                          value=\"memory\"\r\n                          onClick={this.selectGame}\r\n                        />{\" \"}\r\n                        Memory Game\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"radio2\"\r\n                          value=\"oddManOut\"\r\n                          onClick={this.selectGame}\r\n                        />{\" \"}\r\n                        Odd Man Out\r\n                      </Label>\r\n                    </FormGroup>\r\n\r\n                    {selectedGame === \"memory\" && this.addMemoryForm()}\r\n                    {selectedGame === \"oddManOut\" && this.addOddManForm()}\r\n                    <FormGroup>\r\n                      <Button onClick={this.handleSubmit}>Submit</Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherPage;\r\n","import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Container, Button } from \"reactstrap\";\r\nimport AppMenu from \"../common/AppMenu\";\r\nconst QuizGame = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [error, setError] = React.useState(false);\r\n  const [helperText, setHelperText] = React.useState(\"Choose wisely\");\r\n  const handleRadioChange = (event) => {\r\n    setValue(event.target.value);\r\n    setHelperText(\" \");\r\n    setError(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (value === \"best\") {\r\n      setHelperText(\"You got it!\");\r\n      setError(false);\r\n    } else if (value === \"worst\") {\r\n      setHelperText(\"Sorry, wrong answer!\");\r\n      setError(true);\r\n    } else {\r\n      setHelperText(\"Please select an option.\");\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppMenu></AppMenu>\r\n      <Container>\r\n        <h3 className=\"header\"> Pop quiz</h3>\r\n        <div className=\"arrangeButtons\">\r\n          <form onSubmit={handleSubmit}>\r\n            <FormControl component=\"fieldset\" error={error}>\r\n              <FormLabel component=\"legend\"></FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"quiz\"\r\n                name=\"quiz\"\r\n                value={value}\r\n                onChange={handleRadioChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"best\"\r\n                  control={<Radio />}\r\n                  label=\"The best!\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"worst\"\r\n                  control={<Radio />}\r\n                  label=\"The worst.\"\r\n                />\r\n              </RadioGroup>\r\n              <FormHelperText>{helperText}</FormHelperText>\r\n              <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                Check Answer\r\n              </Button>\r\n            </FormControl>\r\n          </form>\r\n          >\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizGame;\r\n","import React from \"react\";\r\nimport { Icon, List } from \"semantic-ui-react\";\r\nconst ShowContent = (props) => {\r\n  return (\r\n    <List animated size=\"big\">\r\n      {props.contenInfo.map(({ itemName }) => (\r\n        <List.Item>\r\n          <List.Content>\r\n            <List.Header>{itemName}</List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ShowContent;\r\n","import React, { useState } from \"react\";\r\nimport { Accordion, Menu, Input } from \"semantic-ui-react\";\r\nimport ShowContent from \"./ShowContent\";\r\n\r\nconst level1Panels = [\r\n  { key: \"panel-1a\", title: \"Level 1A\", content: \"Level 1A Contents\" },\r\n  { key: \"panel-ba\", title: \"Level 1B\", content: \"Level 1B Contents\" },\r\n];\r\n\r\nconst Level1Content = (\r\n  <div>\r\n    Welcome to level 1\r\n    <Accordion.Accordion panels={level1Panels} />\r\n  </div>\r\n);\r\n\r\nconst level2Panels = [\r\n  { key: \"panel-2a\", title: \"Level 2A\", content: \"Level 2A Contents\" },\r\n  { key: \"panel-2b\", title: \"Level 2B\", content: \"Level 2B Contents\" },\r\n];\r\n\r\nconst Level2Content = (\r\n  <div>\r\n    Welcome to level 2\r\n    <Accordion.Accordion panels={level2Panels} />\r\n  </div>\r\n);\r\n\r\nconst rootPanels = [\r\n  { key: \"panel-1\", title: \"Level 1\", content: { content: Level1Content } },\r\n  { key: \"panel-2\", title: \"Level 2\", content: { content: Level2Content } },\r\n];\r\nconst showRootPanels = (props) => {\r\n  let rootPanels = [],\r\n    i = 0,\r\n    category = \"\";\r\n  while (i < props.detailedOutput[0].category.length) {\r\n    category = props.detailedOutput[0].category[i];\r\n    rootPanels.push({\r\n      key: \"\",\r\n      title: category.title,\r\n      content: \"\",\r\n    });\r\n    i++;\r\n  }\r\n\r\n  return rootPanels;\r\n};\r\nconst showContent = () => {};\r\nconst DetailedPage = (props) => {\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const [showContent, setShowContent] = useState(false);\r\n  const [contenInfo, setContentInfo] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <Menu pointing>\r\n        {props.detailedOutput[0].category.map(({ title }, index) => (\r\n          <Menu.Item\r\n            name={title}\r\n            active={activeItem === title}\r\n            onClick={() => {\r\n              setShowContent(true);\r\n              setContentInfo(\r\n                props.detailedOutput[0].category[index].subCategory\r\n              );\r\n            }}\r\n          />\r\n        ))}\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>\r\n            <Input icon=\"search\" placeholder=\"Search...\" />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n      {showContent && <ShowContent contenInfo={contenInfo} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailedPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Dropdown, Menu } from \"semantic-ui-react\";\r\nimport DetailedPage from \"./DetailedPage\";\r\nconst MenuPage = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [showOutput, setShowOutput] = useState(false);\r\n  const [userSelection, setUserSelection] = useState(\"\");\r\n  const [detailedOutput, setDetailedOutput] = useState({});\r\n  useEffect(() => {\r\n    getMenuItems();\r\n  }, [userSelection]);\r\n\r\n  const getMenuItems = async () => {\r\n    if (userSelection === \"\") {\r\n      const response = await fetch(\"/api/faqQuestionList\");\r\n      const body = await response.json();\r\n\r\n      setMenuItems(body);\r\n    } else {\r\n      const response = await fetch(\r\n        \"/api/faqSpecificAnswer?code=\" + userSelection\r\n      );\r\n      const body = await response.json();\r\n      console.log(body);\r\n      setDetailedOutput(body);\r\n      setShowOutput(true);\r\n    }\r\n  };\r\n  const handleClick = (event, data) => {\r\n    console.log(\"event::\", event, data);\r\n    setUserSelection(data.name);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Menu inverted color=\"blue\" size=\"large\">\r\n        <Dropdown text=\"Categories\" pointing className=\"link item\">\r\n          <Dropdown.Menu>\r\n            {menuItems.map(({ question, code }) => (\r\n              <Dropdown.Item name={code} onClick={handleClick}>\r\n                {question}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Menu>\r\n      {showOutput && <DetailedPage detailedOutput={detailedOutput} />}\r\n    </React.Fragment>\r\n    // menuItems.map(<Menu inverted color=\"blue\" size=\"large\">\r\n    //   <Menu.Item>Home</Menu.Item>\r\n    //   <Dropdown text=\"Shopping\" pointing className=\"link item\">\r\n    //     <Dropdown.Menu>\r\n    //       <Dropdown.Header>Categories</Dropdown.Header>\r\n    //       <Dropdown.Item>\r\n    //         <Dropdown text=\"Clothing\">\r\n    //           <Dropdown.Menu>\r\n    //             <Dropdown.Header>Mens</Dropdown.Header>\r\n    //             <Dropdown.Item>Shirts</Dropdown.Item>\r\n    //             <Dropdown.Item>Pants</Dropdown.Item>\r\n    //             <Dropdown.Item>Jeans</Dropdown.Item>\r\n    //             <Dropdown.Item>Shoes</Dropdown.Item>\r\n    //             <Dropdown.Divider />\r\n    //             <Dropdown.Header>Womens</Dropdown.Header>\r\n    //             <Dropdown.Item>Dresses</Dropdown.Item>\r\n    //             <Dropdown.Item>Shoes</Dropdown.Item>\r\n    //             <Dropdown.Item>Bags</Dropdown.Item>\r\n    //           </Dropdown.Menu>\r\n    //         </Dropdown>\r\n    //       </Dropdown.Item>\r\n    //       <Dropdown.Item>Home Goods</Dropdown.Item>\r\n    //       <Dropdown.Item>Bedroom</Dropdown.Item>\r\n    //       <Dropdown.Divider />\r\n    //       <Dropdown.Header>Order</Dropdown.Header>\r\n    //       <Dropdown.Item>Status</Dropdown.Item>\r\n    //       <Dropdown.Item>Cancellations</Dropdown.Item>\r\n    //     </Dropdown.Menu>\r\n    //   </Dropdown>\r\n    //   <Menu.Item>Forums</Menu.Item>\r\n    //   <Menu.Item>Contact Us</Menu.Item>\r\n    // </Menu>\r\n  );\r\n};\r\nexport default MenuPage;\r\n","import React from \"react\";\nimport HomePage from \"./landing/HomePage\";\nimport DetailedPage from \"./landing/DetailedPage\";\nimport GameMenu from \"./games/GameMenu\";\nimport QuestionSet from \"./QuestionSet\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport OtherPage from \"./OtherPage\";\nimport MemoryGame from \"./games/MemoryGame\";\nimport OddManGame from \"./games/OddManGame\";\nimport TimerGame from \"./games/TimerGame\";\nimport QuizGame from \"./games/QuizGame\";\nimport MenuPage from \"./Main/Menu\";\nimport \"semantic-ui-css/semantic.min.css\";\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true} component={MenuPage} />\n            <Route path=\"/detail\" exact={true} component={DetailedPage} />\n            <Route path=\"/games\" exact={true} component={GameMenu} />\n            <Route path=\"/addGameQuestion\" exact={true} component={OtherPage} />\n            <Route path=\"/others\" exact={true} component={QuestionSet} />\n            <Route path=\"/memory\" exact={true} component={MemoryGame} />\n            <Route path=\"/oddman\" exact={true} component={OddManGame} />\n            <Route path=\"/timer\" exact={true} component={TimerGame} />\n            <Route path=\"/quiz\" exact={true} component={QuizGame} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}